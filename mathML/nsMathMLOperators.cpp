/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set ts=8 sts=2 et sw=2 tw=80: */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsMathMLOperators.h"
#include "nsContentUtils.h"

// operator dictionary entry
struct OperatorData {
	OperatorData(void)
		: mLeadingSpace(0),
		mTrailingSpace(0),
		mFlags(0)
	{
	}
	OperatorData(const nsString&	   aStr, 
					   uint8_t		   lspace, 
					   uint8_t		   rspace,
					   nsOperatorFlags flags )
		: mStr(aStr),
		mLeadingSpace(lspace),
		mTrailingSpace(rspace),
		mFlags(flags)
	{
	}

	// member data
	nsString		mStr;
	uint8_t			mLeadingSpace : 4;	 // unit is em
	uint8_t			mTrailingSpace : 4;  // unit is em
	nsOperatorFlags	mFlags;

	bool operator<(const OperatorData& B) const
	{
		// get values of first place operator
		int a = static_cast<int>(static_cast<char16_t>(this->mStr[0]));
		int b = static_cast<int>(static_cast<char16_t>(B.mStr[0]));
		// Compare values
		if (a < b) return true;
		if (a > b) return false;
		// Values tied
		// if either value is compound
		if (this->mStr.Length()>1 || B.mStr.Length()>1) {
			// Consider next values
			for (uint8_t i = 1; i <= 2; ++i) {
				// if either lacks a successor value
				// set value to 0, so that the other value takes precendence
				if (this->mStr.Length() < static_cast<uint8_t>(i + 1)) a = 0;
				else a = static_cast<int>(static_cast<char16_t>(this->mStr[i]));
				if (B.mStr.Length() < static_cast<uint8_t>(i + 1)) b = 0;
				else b = static_cast<int>(static_cast<char16_t>(B.mStr[i]));
				// Compare values
				if (a < b) return true;
				if (a > b) return false;
			}
		}
		// if values are equal, which shouldn't happen
		return false;
	}
};

static int32_t         gTableRefCount = 0;
static const uint16_t  gOperatorCount = 1065;
static const uint16_t  gCompoundOperCount = 59;

static const OperatorData gOperatorTable[gOperatorCount] = {
	{ NS_LITERAL_STRING("\u0021"), 0, 1, NS_MATHML_OPERATOR_FORM_POSTFIX }, // !
	{ NS_LITERAL_STRING("\u0021"), 5, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // !
	{ NS_LITERAL_STRING("\u0025"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // percent sign
	{ NS_LITERAL_STRING("\u0026"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &amp;
	{ NS_LITERAL_STRING("\u0026"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX }, // &amp;
	{ NS_LITERAL_STRING("\u0026"), 5, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // &amp;
	{ NS_LITERAL_STRING("\u0027"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // '
	{ NS_LITERAL_STRING("\u0028"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // (
	{ NS_LITERAL_STRING("\u0029"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // )
	{ NS_LITERAL_STRING("\u002A"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // *
	{ NS_LITERAL_STRING("\u002B"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // +
	{ NS_LITERAL_STRING("\u002B"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // +
	{ NS_LITERAL_STRING("\u002C"), 3, 0, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_SEPARATOR }, // ,
	{ NS_LITERAL_STRING("\u002D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // -
	{ NS_LITERAL_STRING("\u002D"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // -
	{ NS_LITERAL_STRING("\u002E"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // .
	{ NS_LITERAL_STRING("\u002F"), 1, 1, NS_MATHML_OPERATOR_FORM_INFIX }, // solidus
	{ NS_LITERAL_STRING("\u003A"), 2, 1, NS_MATHML_OPERATOR_FORM_INFIX }, // :
	{ NS_LITERAL_STRING("\u003B"), 3, 0, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_SEPARATOR }, // ;
	{ NS_LITERAL_STRING("\u003B"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_SEPARATOR }, // ;
	{ NS_LITERAL_STRING("\u003C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &lt;
	{ NS_LITERAL_STRING("\u003D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // =
	{ NS_LITERAL_STRING("\u003E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // >
	{ NS_LITERAL_STRING("\u003F"), 1, 1, NS_MATHML_OPERATOR_FORM_INFIX }, // ?
	{ NS_LITERAL_STRING("\u0040"), 1, 1, NS_MATHML_OPERATOR_FORM_INFIX }, // @
	{ NS_LITERAL_STRING("\u005B"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // [
	{ NS_LITERAL_STRING("\u005C"), 0, 0, NS_MATHML_OPERATOR_FORM_INFIX }, // reverse solidus
	{ NS_LITERAL_STRING("\u005D"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // ]
	{ NS_LITERAL_STRING("\u005E"), 1, 1, NS_MATHML_OPERATOR_FORM_INFIX }, // ^
	{ NS_LITERAL_STRING("\u005E"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &Hat; circumflex accent
	{ NS_LITERAL_STRING("\u005F"), 1, 1, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // _ low line
	{ NS_LITERAL_STRING("\u005F"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // _ low line
	{ NS_LITERAL_STRING("\u0060"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // &DiacriticalGrave;
	{ NS_LITERAL_STRING("\u007B"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // {
	{ NS_LITERAL_STRING("\u007C"), 2, 2, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // &VerticalLine; |
	{ NS_LITERAL_STRING("\u007C"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // |
	{ NS_LITERAL_STRING("\u007C"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // |
	{ NS_LITERAL_STRING("\u007D"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // }
	{ NS_LITERAL_STRING("\u007E"), 2, 2, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // ~
	{ NS_LITERAL_STRING("\u007E"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // ~ tilde
	{ NS_LITERAL_STRING("\u00A8"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // &DoubleDot;
	{ NS_LITERAL_STRING("\u00AC"), 1, 2, NS_MATHML_OPERATOR_FORM_PREFIX }, // not sign
	{ NS_LITERAL_STRING("\u00AF"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &OverBar;
	{ NS_LITERAL_STRING("\u00B0"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX }, // degree sign
	{ NS_LITERAL_STRING("\u00B1"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &PlusMinus;
	{ NS_LITERAL_STRING("\u00B1"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // &PlusMinus;
	{ NS_LITERAL_STRING("\u00B4"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // &DiacriticalAcute;
	{ NS_LITERAL_STRING("\u00B7"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &CenterDot;
	{ NS_LITERAL_STRING("\u00B8"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // &Cedilla;
	{ NS_LITERAL_STRING("\u00D7"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // multiplication sign
	{ NS_LITERAL_STRING("\u00F7"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // division sign
	{ NS_LITERAL_STRING("\u02C6"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // modifier letter circumflex accent
	{ NS_LITERAL_STRING("\u02C7"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &Hacek; caron
	{ NS_LITERAL_STRING("\u02C9"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // modifier letter macron
	{ NS_LITERAL_STRING("\u02CA"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // modifier letter acute accent
	{ NS_LITERAL_STRING("\u02CB"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // modifier letter grave accent
	{ NS_LITERAL_STRING("\u02CD"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // modifier letter low macron
	{ NS_LITERAL_STRING("\u02D8"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // &Breve;
	{ NS_LITERAL_STRING("\u02D9"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // &DiacriticalDot;
	{ NS_LITERAL_STRING("\u02DA"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // ring above
	{ NS_LITERAL_STRING("\u02DC"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &DiacriticalTilde; small tilde
	{ NS_LITERAL_STRING("\u02DD"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // &DiacriticalDoubleAcute;
	{ NS_LITERAL_STRING("\u02F7"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // modifier letter low tilde
	{ NS_LITERAL_STRING("\u0302"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // combining circumflex accent
	{ NS_LITERAL_STRING("\u0311"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // &DownBreve;
	{ NS_LITERAL_STRING("\u0332"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &UnderBar;
	{ NS_LITERAL_STRING("\u03F6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greek reversed lunate epsilon symbol
	{ NS_LITERAL_STRING("\u2016"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &Vert; &Verbar;
	{ NS_LITERAL_STRING("\u2016"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE }, // &Vert; &Verbar;
	{ NS_LITERAL_STRING("\u2016"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE }, // &Vert; &Verbar;
	{ NS_LITERAL_STRING("\u2018"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_MIRRORABLE }, // &OpenCurlyQuote;
	{ NS_LITERAL_STRING("\u2019"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_MIRRORABLE }, // &CloseCurlyQuote;
	{ NS_LITERAL_STRING("\u201C"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_MIRRORABLE }, // &OpenCurlyDoubleQuote;
	{ NS_LITERAL_STRING("\u201D"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_MIRRORABLE }, // &CloseCurlyDoubleQuote;
	{ NS_LITERAL_STRING("\u2022"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // bullet
	{ NS_LITERAL_STRING("\u2026"), 0, 0, NS_MATHML_OPERATOR_FORM_INFIX }, // horizontal ellipsis
	{ NS_LITERAL_STRING("\u2032"), 2, 0, NS_MATHML_OPERATOR_FORM_POSTFIX }, // prime
	{ NS_LITERAL_STRING("\u203E"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // overline
	{ NS_LITERAL_STRING("\u2044"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // fraction slash
	{ NS_LITERAL_STRING("\u2061"), 0, 0, NS_MATHML_OPERATOR_FORM_INFIX }, // &ApplyFunction;
	{ NS_LITERAL_STRING("\u2062"), 0, 0, NS_MATHML_OPERATOR_FORM_INFIX }, // &InvisibleTimes;
	{ NS_LITERAL_STRING("\u2063"), 0, 0, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_SEPARATOR }, // &InvisibleComma;
	{ NS_LITERAL_STRING("\u2064"), 0, 0, NS_MATHML_OPERATOR_FORM_INFIX }, // invisible plus
	{ NS_LITERAL_STRING("\u20D0"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &#x20D0;
	{ NS_LITERAL_STRING("\u20D1"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &#x20D1;
	{ NS_LITERAL_STRING("\u20D6"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &#x20D6;
	{ NS_LITERAL_STRING("\u20D7"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &#x20D7;
	{ NS_LITERAL_STRING("\u20DB"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // &TripleDot;
	{ NS_LITERAL_STRING("\u20DC"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_ACCENT }, // combining four dots above
	{ NS_LITERAL_STRING("\u20E1"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &#x20E1;
	{ NS_LITERAL_STRING("\u2145"), 1, 2, NS_MATHML_OPERATOR_FORM_PREFIX }, // &CapitalDifferentialD;
	{ NS_LITERAL_STRING("\u2146"), 0, 2, NS_MATHML_OPERATOR_FORM_PREFIX }, // &DifferentialD;
	{ NS_LITERAL_STRING("\u2190"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &LeftArrow;
	{ NS_LITERAL_STRING("\u2191"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &UpArrow;
	{ NS_LITERAL_STRING("\u2192"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &RightArrow;
	{ NS_LITERAL_STRING("\u2193"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &DownArrow;
	{ NS_LITERAL_STRING("\u2194"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &LeftRightArrow;
	{ NS_LITERAL_STRING("\u2195"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &UpDownArrow;
	{ NS_LITERAL_STRING("\u2196"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &UpperLeftArrow;
	{ NS_LITERAL_STRING("\u2197"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &UpperRightArrow;
	{ NS_LITERAL_STRING("\u2198"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &LowerRightArrow;
	{ NS_LITERAL_STRING("\u2199"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &LowerLeftArrow;
	{ NS_LITERAL_STRING("\u219A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow with stroke
	{ NS_LITERAL_STRING("\u219B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow with stroke
	{ NS_LITERAL_STRING("\u219C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // leftwards wave arrow
	{ NS_LITERAL_STRING("\u219D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards wave arrow
	{ NS_LITERAL_STRING("\u219E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // leftwards two headed arrow
	{ NS_LITERAL_STRING("\u219F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // upwards two headed arrow
	{ NS_LITERAL_STRING("\u21A0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards two headed arrow
	{ NS_LITERAL_STRING("\u21A1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // downwards two headed arrow
	{ NS_LITERAL_STRING("\u21A2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow with tail
	{ NS_LITERAL_STRING("\u21A3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow with tail
	{ NS_LITERAL_STRING("\u21A4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &LeftTeeArrow;
	{ NS_LITERAL_STRING("\u21A5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &UpTeeArrow;
	{ NS_LITERAL_STRING("\u21A6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &RightTeeArrow;
	{ NS_LITERAL_STRING("\u21A7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &DownTeeArrow;
	{ NS_LITERAL_STRING("\u21A8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // up down arrow with base
	{ NS_LITERAL_STRING("\u21A9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &hookleftarrow; &larrhk;
	{ NS_LITERAL_STRING("\u21AA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &hookrightarrow; &rarrhk;
	{ NS_LITERAL_STRING("\u21AB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow with loop
	{ NS_LITERAL_STRING("\u21AC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow with loop
	{ NS_LITERAL_STRING("\u21AD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // left right wave arrow
	{ NS_LITERAL_STRING("\u21AE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // left right arrow with stroke
	{ NS_LITERAL_STRING("\u21AF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // downwards zigzag arrow
	{ NS_LITERAL_STRING("\u21B0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // upwards arrow with tip leftwards
	{ NS_LITERAL_STRING("\u21B1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // upwards arrow with tip rightwards
	{ NS_LITERAL_STRING("\u21B2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // downwards arrow with tip leftwards
	{ NS_LITERAL_STRING("\u21B3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // downwards arrow with tip rightwards
	{ NS_LITERAL_STRING("\u21B4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // rightwards arrow with corner downwards
	{ NS_LITERAL_STRING("\u21B5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // downwards arrow with corner leftwards
	{ NS_LITERAL_STRING("\u21B6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // anticlockwise top semicircle arrow
	{ NS_LITERAL_STRING("\u21B7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // clockwise top semicircle arrow
	{ NS_LITERAL_STRING("\u21B8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // north west arrow to long bar
	{ NS_LITERAL_STRING("\u21B9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow to bar over rightwards arrow to bar
	{ NS_LITERAL_STRING("\u21BA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // anticlockwise open circle arrow
	{ NS_LITERAL_STRING("\u21BB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // clockwise open circle arrow
	{ NS_LITERAL_STRING("\u21BC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &LeftVector;
	{ NS_LITERAL_STRING("\u21BD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &DownLeftVector;
	{ NS_LITERAL_STRING("\u21BE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &RightUpVector;
	{ NS_LITERAL_STRING("\u21BF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &LeftUpVector;
	{ NS_LITERAL_STRING("\u21C0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &RightVector;
	{ NS_LITERAL_STRING("\u21C1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &DownRightVector;
	{ NS_LITERAL_STRING("\u21C2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &RightDownVector;
	{ NS_LITERAL_STRING("\u21C3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &LeftDownVector;
	{ NS_LITERAL_STRING("\u21C4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &RightArrowLeftArrow;
	{ NS_LITERAL_STRING("\u21C5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &UpArrowDownArrow;
	{ NS_LITERAL_STRING("\u21C6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &LeftArrowRightArrow;
	{ NS_LITERAL_STRING("\u21C7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // leftwards paired arrows
	{ NS_LITERAL_STRING("\u21C8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // upwards paired arrows
	{ NS_LITERAL_STRING("\u21C9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards paired arrows
	{ NS_LITERAL_STRING("\u21CA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // downwards paired arrows
	{ NS_LITERAL_STRING("\u21CB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &ReverseEquilibrium;
	{ NS_LITERAL_STRING("\u21CC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &Equilibrium;
	{ NS_LITERAL_STRING("\u21CD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards double arrow with stroke
	{ NS_LITERAL_STRING("\u21CE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // left right double arrow with stroke
	{ NS_LITERAL_STRING("\u21CF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards double arrow with stroke
	{ NS_LITERAL_STRING("\u21D0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &DoubleLeftArrow;
	{ NS_LITERAL_STRING("\u21D1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &DoubleUpArrow;
	{ NS_LITERAL_STRING("\u21D2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &Implies; &DoubleRightArrow;
	{ NS_LITERAL_STRING("\u21D3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &DoubleDownArrow;
	{ NS_LITERAL_STRING("\u21D4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &DoubleLeftRightArrow;
	{ NS_LITERAL_STRING("\u21D5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &DoubleUpDownArrow;
	{ NS_LITERAL_STRING("\u21DA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // leftwards triple arrow
	{ NS_LITERAL_STRING("\u21DB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards triple arrow
	{ NS_LITERAL_STRING("\u21DC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // leftwards squiggle arrow
	{ NS_LITERAL_STRING("\u21DD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards squiggle arrow
	{ NS_LITERAL_STRING("\u21DE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // upwards arrow with double stroke
	{ NS_LITERAL_STRING("\u21DF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // downwards arrow with double stroke
	{ NS_LITERAL_STRING("\u21E0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // leftwards dashed arrow
	{ NS_LITERAL_STRING("\u21E1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // upwards dashed arrow
	{ NS_LITERAL_STRING("\u21E2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards dashed arrow
	{ NS_LITERAL_STRING("\u21E3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // downwards dashed arrow
	{ NS_LITERAL_STRING("\u21E4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &LeftArrowBar;
	{ NS_LITERAL_STRING("\u21E5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &RightArrowBar;
	{ NS_LITERAL_STRING("\u21E6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // leftwards white arrow
	{ NS_LITERAL_STRING("\u21E7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // upwards white arrow
	{ NS_LITERAL_STRING("\u21E8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards white arrow
	{ NS_LITERAL_STRING("\u21E9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // downwards white arrow
	{ NS_LITERAL_STRING("\u21EA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // upwards white arrow from bar
	{ NS_LITERAL_STRING("\u21EB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // upwards white arrow on pedestal
	{ NS_LITERAL_STRING("\u21EC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // upwards white arrow on pedestal with horizontal bar
	{ NS_LITERAL_STRING("\u21ED"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // upwards white arrow on pedestal with vertical bar
	{ NS_LITERAL_STRING("\u21EE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // upwards white double arrow
	{ NS_LITERAL_STRING("\u21EF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // upwards white double arrow on pedestal
	{ NS_LITERAL_STRING("\u21F0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards white arrow from wall
	{ NS_LITERAL_STRING("\u21F1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // north west arrow to corner
	{ NS_LITERAL_STRING("\u21F2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // south east arrow to corner
	{ NS_LITERAL_STRING("\u21F3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // up down white arrow
	{ NS_LITERAL_STRING("\u21F4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // right arrow with small circle
	{ NS_LITERAL_STRING("\u21F5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &DownArrowUpArrow;
	{ NS_LITERAL_STRING("\u21F6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // three rightwards arrows
	{ NS_LITERAL_STRING("\u21F7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow with vertical stroke
	{ NS_LITERAL_STRING("\u21F8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow with vertical stroke
	{ NS_LITERAL_STRING("\u21F9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // left right arrow with vertical stroke
	{ NS_LITERAL_STRING("\u21FA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow with double vertical stroke
	{ NS_LITERAL_STRING("\u21FB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow with double vertical stroke
	{ NS_LITERAL_STRING("\u21FC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // left right arrow with double vertical stroke
	{ NS_LITERAL_STRING("\u21FD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // leftwards open-headed arrow
	{ NS_LITERAL_STRING("\u21FE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards open-headed arrow
	{ NS_LITERAL_STRING("\u21FF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // left right open-headed arrow
	{ NS_LITERAL_STRING("\u2200"), 1, 2, NS_MATHML_OPERATOR_FORM_PREFIX }, // &ForAll;
	{ NS_LITERAL_STRING("\u2201"), 2, 1, NS_MATHML_OPERATOR_FORM_INFIX }, // complement
	{ NS_LITERAL_STRING("\u2202"), 1, 2, NS_MATHML_OPERATOR_FORM_PREFIX }, // &PartialD;
	{ NS_LITERAL_STRING("\u2203"), 1, 2, NS_MATHML_OPERATOR_FORM_PREFIX }, // &Exists;
	{ NS_LITERAL_STRING("\u2204"), 1, 2, NS_MATHML_OPERATOR_FORM_PREFIX }, // &NotExists;
	{ NS_LITERAL_STRING("\u2206"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // increment
	{ NS_LITERAL_STRING("\u2207"), 1, 2, NS_MATHML_OPERATOR_FORM_PREFIX }, // &Del;
	{ NS_LITERAL_STRING("\u2208"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &Element;
	{ NS_LITERAL_STRING("\u2209"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotElement;
	{ NS_LITERAL_STRING("\u220A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // small element of
	{ NS_LITERAL_STRING("\u220B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &SuchThat; &ReverseElement;
	{ NS_LITERAL_STRING("\u220C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotReverseElement;
	{ NS_LITERAL_STRING("\u220D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // small contains as member
	{ NS_LITERAL_STRING("\u220E"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // end of proof
	{ NS_LITERAL_STRING("\u220F"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &Product;
	{ NS_LITERAL_STRING("\u2210"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &Coproduct;
	{ NS_LITERAL_STRING("\u2211"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // &Sum;
	{ NS_LITERAL_STRING("\u2212"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // official Unicode minus sign
	{ NS_LITERAL_STRING("\u2212"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // official Unicode minus sign
	{ NS_LITERAL_STRING("\u2213"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &MinusPlus;
	{ NS_LITERAL_STRING("\u2213"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // &MinusPlus;
	{ NS_LITERAL_STRING("\u2214"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // dot plus
	{ NS_LITERAL_STRING("\u2215"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_MIRRORABLE }, // division slash
	{ NS_LITERAL_STRING("\u2216"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // set minus
	{ NS_LITERAL_STRING("\u2217"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // asterisk operator
	{ NS_LITERAL_STRING("\u2218"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &SmallCircle;
	{ NS_LITERAL_STRING("\u2219"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // bullet operator
	{ NS_LITERAL_STRING("\u221A"), 1, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_MIRRORABLE }, // &Sqrt;
	{ NS_LITERAL_STRING("\u221B"), 1, 1, NS_MATHML_OPERATOR_FORM_PREFIX }, // cube root
	{ NS_LITERAL_STRING("\u221C"), 1, 1, NS_MATHML_OPERATOR_FORM_PREFIX }, // fourth root
	{ NS_LITERAL_STRING("\u221D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &Proportional;
	{ NS_LITERAL_STRING("\u221F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // right angle
	{ NS_LITERAL_STRING("\u2220"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // angle
	{ NS_LITERAL_STRING("\u2221"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // measured angle
	{ NS_LITERAL_STRING("\u2222"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // spherical angle
	{ NS_LITERAL_STRING("\u2223"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // divides
	{ NS_LITERAL_STRING("\u2223"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // &VerticalBar;
	{ NS_LITERAL_STRING("\u2223"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // &VerticalBar;
	{ NS_LITERAL_STRING("\u2224"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotVerticalBar;
	{ NS_LITERAL_STRING("\u2225"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // parallel to
	{ NS_LITERAL_STRING("\u2225"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // &DoubleVerticalBar;
	{ NS_LITERAL_STRING("\u2225"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // &DoubleVerticalBar;
	{ NS_LITERAL_STRING("\u2226"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotDoubleVerticalBar;
	{ NS_LITERAL_STRING("\u2227"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &wedge;
	{ NS_LITERAL_STRING("\u2228"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &vee;
	{ NS_LITERAL_STRING("\u2229"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &cap;
	{ NS_LITERAL_STRING("\u222A"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &cup;
	{ NS_LITERAL_STRING("\u222B"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // &Integral;
	{ NS_LITERAL_STRING("\u222C"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // double integral
	{ NS_LITERAL_STRING("\u222D"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // triple integral
	{ NS_LITERAL_STRING("\u222E"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // &ContourIntegral;
	{ NS_LITERAL_STRING("\u222F"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // &DoubleContourIntegral;
	{ NS_LITERAL_STRING("\u2230"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // volume integral
	{ NS_LITERAL_STRING("\u2231"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL }, // clockwise integral
	{ NS_LITERAL_STRING("\u2232"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL }, // &ClockwiseContourIntegral;
	{ NS_LITERAL_STRING("\u2233"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL }, // &CounterClockwiseContourIntegral;
	{ NS_LITERAL_STRING("\u2234"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &Therefore;
	{ NS_LITERAL_STRING("\u2235"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &Because;
	{ NS_LITERAL_STRING("\u2236"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // ratio
	{ NS_LITERAL_STRING("\u2237"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &Colon; &Proportion;
	{ NS_LITERAL_STRING("\u2238"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // dot minus
	{ NS_LITERAL_STRING("\u2239"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // excess
	{ NS_LITERAL_STRING("\u223A"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // geometric proportion
	{ NS_LITERAL_STRING("\u223B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // homothetic
	{ NS_LITERAL_STRING("\u223C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &Tilde;
	{ NS_LITERAL_STRING("\u223D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // reversed tilde
	{ NS_LITERAL_STRING("\u223E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // inverted lazy s
	{ NS_LITERAL_STRING("\u223F"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // sine wave
	{ NS_LITERAL_STRING("\u2240"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &VerticalTilde;
	{ NS_LITERAL_STRING("\u2241"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotTilde;
	{ NS_LITERAL_STRING("\u2242"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &EqualTilde;
	{ NS_LITERAL_STRING("\u2243"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &TildeEqual;
	{ NS_LITERAL_STRING("\u2244"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotTildeEqual;
	{ NS_LITERAL_STRING("\u2245"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &TildeFullEqual;
	{ NS_LITERAL_STRING("\u2246"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // approximately but not actually equal to
	{ NS_LITERAL_STRING("\u2247"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotTildeFullEqual;
	{ NS_LITERAL_STRING("\u2248"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &TildeTilde;
	{ NS_LITERAL_STRING("\u2249"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotTildeTilde;
	{ NS_LITERAL_STRING("\u224A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // almost equal or equal to
	{ NS_LITERAL_STRING("\u224B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // triple tilde
	{ NS_LITERAL_STRING("\u224C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // all equal to
	{ NS_LITERAL_STRING("\u224D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &CupCap;
	{ NS_LITERAL_STRING("\u224E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &HumpDownHump;
	{ NS_LITERAL_STRING("\u224F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &HumpEqual;
	{ NS_LITERAL_STRING("\u2250"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &DotEqual;
	{ NS_LITERAL_STRING("\u2251"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // geometrically equal to
	{ NS_LITERAL_STRING("\u2252"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // approximately equal to or the image of
	{ NS_LITERAL_STRING("\u2253"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // image of or approximately equal to
	{ NS_LITERAL_STRING("\u2254"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &Assign;
	{ NS_LITERAL_STRING("\u2255"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equals colon
	{ NS_LITERAL_STRING("\u2256"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // ring in equal to
	{ NS_LITERAL_STRING("\u2257"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // ring equal to
	{ NS_LITERAL_STRING("\u2258"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // corresponds to
	{ NS_LITERAL_STRING("\u2259"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // estimates
	{ NS_LITERAL_STRING("\u225A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equiangular to
	{ NS_LITERAL_STRING("\u225C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // delta equal to
	{ NS_LITERAL_STRING("\u225D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equal to by definition
	{ NS_LITERAL_STRING("\u225E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // measured by
	{ NS_LITERAL_STRING("\u225F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // questioned equal to
	{ NS_LITERAL_STRING("\u2260"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotEqual;
	{ NS_LITERAL_STRING("\u2261"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &Congruent;
	{ NS_LITERAL_STRING("\u2262"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotCongruent;
	{ NS_LITERAL_STRING("\u2263"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // strictly equivalent to
	{ NS_LITERAL_STRING("\u2264"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &le;
	{ NS_LITERAL_STRING("\u2265"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &GreaterEqual;
	{ NS_LITERAL_STRING("\u2266"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &LessFullEqual;
	{ NS_LITERAL_STRING("\u2267"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &GreaterFullEqual;
	{ NS_LITERAL_STRING("\u2268"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than but not equal to
	{ NS_LITERAL_STRING("\u2269"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than but not equal to
	{ NS_LITERAL_STRING("\u226A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NestedLessLess;
	{ NS_LITERAL_STRING("\u226B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NestedGreaterGreater;
	{ NS_LITERAL_STRING("\u226C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // between
	{ NS_LITERAL_STRING("\u226D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotCupCap;
	{ NS_LITERAL_STRING("\u226E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotLess;
	{ NS_LITERAL_STRING("\u226F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotGreater;
	{ NS_LITERAL_STRING("\u2270"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotLessEqual;
	{ NS_LITERAL_STRING("\u2271"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotGreaterEqual;
	{ NS_LITERAL_STRING("\u2272"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &LessTilde;
	{ NS_LITERAL_STRING("\u2273"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &GreaterTilde;
	{ NS_LITERAL_STRING("\u2274"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotLessTilde;
	{ NS_LITERAL_STRING("\u2275"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotGreaterTilde;
	{ NS_LITERAL_STRING("\u2276"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &LessGreater;
	{ NS_LITERAL_STRING("\u2277"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &GreaterLess;
	{ NS_LITERAL_STRING("\u2278"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotLessGreater;
	{ NS_LITERAL_STRING("\u2279"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotGreaterLess;
	{ NS_LITERAL_STRING("\u227A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &Precedes;
	{ NS_LITERAL_STRING("\u227B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &Succeeds;
	{ NS_LITERAL_STRING("\u227C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &PrecedesSlantEqual;
	{ NS_LITERAL_STRING("\u227D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &SucceedsSlantEqual;
	{ NS_LITERAL_STRING("\u227E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &PrecedesTilde;
	{ NS_LITERAL_STRING("\u227F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &SucceedsTilde;
	{ NS_LITERAL_STRING("\u2280"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotPrecedes;
	{ NS_LITERAL_STRING("\u2281"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotSucceeds;
	{ NS_LITERAL_STRING("\u2282"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &subset;
	{ NS_LITERAL_STRING("\u2283"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &Superset;
	{ NS_LITERAL_STRING("\u2284"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &nsub;
	{ NS_LITERAL_STRING("\u2285"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &nsup;
	{ NS_LITERAL_STRING("\u2286"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &SubsetEqual;
	{ NS_LITERAL_STRING("\u2287"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &SupersetEqual;
	{ NS_LITERAL_STRING("\u2288"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotSubsetEqual;
	{ NS_LITERAL_STRING("\u2289"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotSupersetEqual;
	{ NS_LITERAL_STRING("\u228A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &subsetneq; &subne;
	{ NS_LITERAL_STRING("\u228B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // superset of with not equal to
	{ NS_LITERAL_STRING("\u228C"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // multiset
	{ NS_LITERAL_STRING("\u228D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // multiset multiplication
	{ NS_LITERAL_STRING("\u228E"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &UnionPlus;
	{ NS_LITERAL_STRING("\u228E"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &UnionPlus;
	{ NS_LITERAL_STRING("\u228F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &SquareSubset;
	{ NS_LITERAL_STRING("\u2290"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &SquareSuperset;
	{ NS_LITERAL_STRING("\u2291"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &SquareSubsetEqual;
	{ NS_LITERAL_STRING("\u2292"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &SquareSupersetEqual;
	{ NS_LITERAL_STRING("\u2293"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &SquareIntersection;
	{ NS_LITERAL_STRING("\u2294"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &SquareUnion;
	{ NS_LITERAL_STRING("\u2295"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &CirclePlus;
	{ NS_LITERAL_STRING("\u2295"), 3, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &CirclePlus;
	{ NS_LITERAL_STRING("\u2296"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &CircleMinus;
	{ NS_LITERAL_STRING("\u2296"), 3, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &CircleMinus;
	{ NS_LITERAL_STRING("\u2297"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &CircleTimes;
	{ NS_LITERAL_STRING("\u2297"), 3, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &CircleTimes;
	{ NS_LITERAL_STRING("\u2298"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled division slash
	{ NS_LITERAL_STRING("\u2299"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &CircleDot;
	{ NS_LITERAL_STRING("\u2299"), 3, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &CircleDot;
	{ NS_LITERAL_STRING("\u229A"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled ring operator
	{ NS_LITERAL_STRING("\u229B"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled asterisk operator
	{ NS_LITERAL_STRING("\u229C"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled equals
	{ NS_LITERAL_STRING("\u229D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled dash
	{ NS_LITERAL_STRING("\u229E"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // squared plus
	{ NS_LITERAL_STRING("\u229F"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // squared minus
	{ NS_LITERAL_STRING("\u22A0"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // squared times
	{ NS_LITERAL_STRING("\u22A1"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // squared dot operator
	{ NS_LITERAL_STRING("\u22A2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &RightTee;
	{ NS_LITERAL_STRING("\u22A3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &LeftTee;
	{ NS_LITERAL_STRING("\u22A4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &DownTee;
	{ NS_LITERAL_STRING("\u22A5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &UpTee;
	{ NS_LITERAL_STRING("\u22A6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // assertion
	{ NS_LITERAL_STRING("\u22A7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // models
	{ NS_LITERAL_STRING("\u22A8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &DoubleRightTee;
	{ NS_LITERAL_STRING("\u22A9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // forces
	{ NS_LITERAL_STRING("\u22AA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // triple vertical bar right turnstile
	{ NS_LITERAL_STRING("\u22AB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double vertical bar double right turnstile
	{ NS_LITERAL_STRING("\u22AC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // does not prove
	{ NS_LITERAL_STRING("\u22AD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // not true
	{ NS_LITERAL_STRING("\u22AE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // does not force
	{ NS_LITERAL_STRING("\u22AF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // negated double vertical bar double right turnstile
	{ NS_LITERAL_STRING("\u22B0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // precedes under relation
	{ NS_LITERAL_STRING("\u22B1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // succeeds under relation
	{ NS_LITERAL_STRING("\u22B2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &LeftTriangle;
	{ NS_LITERAL_STRING("\u22B3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &RightTriangle;
	{ NS_LITERAL_STRING("\u22B4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &LeftTriangleEqual;
	{ NS_LITERAL_STRING("\u22B5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &RightTriangleEqual;
	{ NS_LITERAL_STRING("\u22B6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // original of
	{ NS_LITERAL_STRING("\u22B7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // image of
	{ NS_LITERAL_STRING("\u22B8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // multimap
	{ NS_LITERAL_STRING("\u22B9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // hermitian conjugate matrix
	{ NS_LITERAL_STRING("\u22BA"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // intercalate
	{ NS_LITERAL_STRING("\u22BB"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // xor
	{ NS_LITERAL_STRING("\u22BC"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // nand
	{ NS_LITERAL_STRING("\u22BD"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // nor
	{ NS_LITERAL_STRING("\u22BE"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // right angle with arc
	{ NS_LITERAL_STRING("\u22BF"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // right triangle
	{ NS_LITERAL_STRING("\u22C0"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &Wedge;
	{ NS_LITERAL_STRING("\u22C1"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &Vee;
	{ NS_LITERAL_STRING("\u22C2"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &Intersection;
	{ NS_LITERAL_STRING("\u22C3"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &Union;
	{ NS_LITERAL_STRING("\u22C4"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &Diamond;
	{ NS_LITERAL_STRING("\u22C5"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &cdot;
	{ NS_LITERAL_STRING("\u22C6"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &Star;
	{ NS_LITERAL_STRING("\u22C7"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // division times
	{ NS_LITERAL_STRING("\u22C8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // bowtie
	{ NS_LITERAL_STRING("\u22C9"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // left normal factor semidirect product
	{ NS_LITERAL_STRING("\u22CA"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // right normal factor semidirect product
	{ NS_LITERAL_STRING("\u22CB"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // left semidirect product
	{ NS_LITERAL_STRING("\u22CC"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // right semidirect product
	{ NS_LITERAL_STRING("\u22CD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // reversed tilde equals
	{ NS_LITERAL_STRING("\u22CE"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // curly logical or
	{ NS_LITERAL_STRING("\u22CF"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // curly logical and
	{ NS_LITERAL_STRING("\u22D0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &Subset;
	{ NS_LITERAL_STRING("\u22D1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double superset
	{ NS_LITERAL_STRING("\u22D2"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &Cap;
	{ NS_LITERAL_STRING("\u22D3"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &Cup;
	{ NS_LITERAL_STRING("\u22D4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // pitchfork
	{ NS_LITERAL_STRING("\u22D5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equal and parallel to
	{ NS_LITERAL_STRING("\u22D6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than with dot
	{ NS_LITERAL_STRING("\u22D7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than with dot
	{ NS_LITERAL_STRING("\u22D8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // very much less-than
	{ NS_LITERAL_STRING("\u22D9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // very much greater-than
	{ NS_LITERAL_STRING("\u22DA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &LessEqualGreater;
	{ NS_LITERAL_STRING("\u22DB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &GreaterEqualLess;
	{ NS_LITERAL_STRING("\u22DC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equal to or less-than
	{ NS_LITERAL_STRING("\u22DD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equal to or greater-than
	{ NS_LITERAL_STRING("\u22DE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equal to or precedes
	{ NS_LITERAL_STRING("\u22DF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equal to or succeeds
	{ NS_LITERAL_STRING("\u22E0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotPrecedesSlantEqual;
	{ NS_LITERAL_STRING("\u22E1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotSucceedsSlantEqual;
	{ NS_LITERAL_STRING("\u22E2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotSquareSubsetEqual;
	{ NS_LITERAL_STRING("\u22E3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotSquareSupersetEqual;
	{ NS_LITERAL_STRING("\u22E4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // square image of or not equal to
	{ NS_LITERAL_STRING("\u22E5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // square original of or not equal to
	{ NS_LITERAL_STRING("\u22E6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than but not equivalent to
	{ NS_LITERAL_STRING("\u22E7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than but not equivalent to
	{ NS_LITERAL_STRING("\u22E8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // precedes but not equivalent to
	{ NS_LITERAL_STRING("\u22E9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // succeeds but not equivalent to
	{ NS_LITERAL_STRING("\u22EA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotLeftTriangle;
	{ NS_LITERAL_STRING("\u22EB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotRightTriangle;
	{ NS_LITERAL_STRING("\u22EC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotLeftTriangleEqual;
	{ NS_LITERAL_STRING("\u22ED"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotRightTriangleEqual;
	{ NS_LITERAL_STRING("\u22EE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // vertical ellipsis
	{ NS_LITERAL_STRING("\u22EF"), 0, 0, NS_MATHML_OPERATOR_FORM_INFIX }, // midline horizontal ellipsis
	{ NS_LITERAL_STRING("\u22F0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // up right diagonal ellipsis
	{ NS_LITERAL_STRING("\u22F1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // down right diagonal ellipsis
	{ NS_LITERAL_STRING("\u22F2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // element of with long horizontal stroke
	{ NS_LITERAL_STRING("\u22F3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // element of with vertical bar at end of horizontal stroke
	{ NS_LITERAL_STRING("\u22F4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // small element of with vertical bar at end of horizontal stroke
	{ NS_LITERAL_STRING("\u22F5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // element of with dot above
	{ NS_LITERAL_STRING("\u22F6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // element of with overbar
	{ NS_LITERAL_STRING("\u22F7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // small element of with overbar
	{ NS_LITERAL_STRING("\u22F8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // element of with underbar
	{ NS_LITERAL_STRING("\u22F9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // element of with two horizontal strokes
	{ NS_LITERAL_STRING("\u22FA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // contains with long horizontal stroke
	{ NS_LITERAL_STRING("\u22FB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // contains with vertical bar at end of horizontal stroke
	{ NS_LITERAL_STRING("\u22FC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // small contains with vertical bar at end of horizontal stroke
	{ NS_LITERAL_STRING("\u22FD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // contains with overbar
	{ NS_LITERAL_STRING("\u22FE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // small contains with overbar
	{ NS_LITERAL_STRING("\u22FF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // z notation bag membership
	{ NS_LITERAL_STRING("\u2308"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // &LeftCeiling;
	{ NS_LITERAL_STRING("\u2309"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // &RightCeiling;
	{ NS_LITERAL_STRING("\u230A"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // &LeftFloor;
	{ NS_LITERAL_STRING("\u230B"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // &RightFloor;
	{ NS_LITERAL_STRING("\u23B0"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // &lmoustache; &lmoust;
	{ NS_LITERAL_STRING("\u23B1"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // &rmoustache; &rmoust;
	{ NS_LITERAL_STRING("\u23B4"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &OverBracket;
	{ NS_LITERAL_STRING("\u23B5"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &UnderBracket;
	{ NS_LITERAL_STRING("\u23DC"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &OverParenthesis; (Unicode)
	{ NS_LITERAL_STRING("\u23DD"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &UnderParenthesis; (Unicode)
	{ NS_LITERAL_STRING("\u23DE"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &OverBrace; (Unicode)
	{ NS_LITERAL_STRING("\u23DF"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &UnderBrace; (Unicode)
	{ NS_LITERAL_STRING("\u23E0"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // top tortoise shell bracket
	{ NS_LITERAL_STRING("\u23E1"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // bottom tortoise shell bracket
	{ NS_LITERAL_STRING("\u2500"), 0, 0, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &HorizontalLine;
	{ NS_LITERAL_STRING("\u25A0"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // black square
	{ NS_LITERAL_STRING("\u25A1"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // white square
	{ NS_LITERAL_STRING("\u25A1"), 2, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // &Square;
	{ NS_LITERAL_STRING("\u25AA"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // black small square
	{ NS_LITERAL_STRING("\u25AB"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // white small square
	{ NS_LITERAL_STRING("\u25AD"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // white rectangle
	{ NS_LITERAL_STRING("\u25AE"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // black vertical rectangle
	{ NS_LITERAL_STRING("\u25AF"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // white vertical rectangle
	{ NS_LITERAL_STRING("\u25B0"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // black parallelogram
	{ NS_LITERAL_STRING("\u25B1"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // white parallelogram
	{ NS_LITERAL_STRING("\u25B2"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // black up-pointing triangle
	{ NS_LITERAL_STRING("\u25B3"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // white up-pointing triangle
	{ NS_LITERAL_STRING("\u25B4"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // black up-pointing small triangle
	{ NS_LITERAL_STRING("\u25B5"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // white up-pointing small triangle
	{ NS_LITERAL_STRING("\u25B6"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // black right-pointing triangle
	{ NS_LITERAL_STRING("\u25B7"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // white right-pointing triangle
	{ NS_LITERAL_STRING("\u25B8"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // black right-pointing small triangle
	{ NS_LITERAL_STRING("\u25B9"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // white right-pointing small triangle
	{ NS_LITERAL_STRING("\u25BC"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // black down-pointing triangle
	{ NS_LITERAL_STRING("\u25BD"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // white down-pointing triangle
	{ NS_LITERAL_STRING("\u25BE"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // black down-pointing small triangle
	{ NS_LITERAL_STRING("\u25BF"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // white down-pointing small triangle
	{ NS_LITERAL_STRING("\u25C0"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // black left-pointing triangle
	{ NS_LITERAL_STRING("\u25C1"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // white left-pointing triangle
	{ NS_LITERAL_STRING("\u25C2"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // black left-pointing small triangle
	{ NS_LITERAL_STRING("\u25C3"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // white left-pointing small triangle
	{ NS_LITERAL_STRING("\u25C4"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // black left-pointing pointer
	{ NS_LITERAL_STRING("\u25C5"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // white left-pointing pointer
	{ NS_LITERAL_STRING("\u25C6"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // black diamond
	{ NS_LITERAL_STRING("\u25C7"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // white diamond
	{ NS_LITERAL_STRING("\u25C8"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // white diamond containing black small diamond
	{ NS_LITERAL_STRING("\u25C9"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // fisheye
	{ NS_LITERAL_STRING("\u25CC"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // dotted circle
	{ NS_LITERAL_STRING("\u25CD"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circle with vertical fill
	{ NS_LITERAL_STRING("\u25CE"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // bullseye
	{ NS_LITERAL_STRING("\u25CF"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // black circle
	{ NS_LITERAL_STRING("\u25D6"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // left half black circle
	{ NS_LITERAL_STRING("\u25D7"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // right half black circle
	{ NS_LITERAL_STRING("\u25E6"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // white bullet
	{ NS_LITERAL_STRING("\u2606"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // &star;
	{ NS_LITERAL_STRING("\u266D"), 2, 0, NS_MATHML_OPERATOR_FORM_POSTFIX }, // music flat sign
	{ NS_LITERAL_STRING("\u266E"), 2, 0, NS_MATHML_OPERATOR_FORM_POSTFIX }, // music natural sign
	{ NS_LITERAL_STRING("\u266F"), 2, 0, NS_MATHML_OPERATOR_FORM_POSTFIX }, // music sharp sign
	{ NS_LITERAL_STRING("\u2758"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // light vertical bar 
	{ NS_LITERAL_STRING("\u2772"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // light left tortoise shell bracket ornament
	{ NS_LITERAL_STRING("\u2773"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // light right tortoise shell bracket ornament
	{ NS_LITERAL_STRING("\u27E6"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // &LeftDoubleBracket;
	{ NS_LITERAL_STRING("\u27E7"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // &RightDoubleBracket;
	{ NS_LITERAL_STRING("\u27E8"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // &LeftAngleBracket;
	{ NS_LITERAL_STRING("\u27E9"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // &RightAngleBracket;
	{ NS_LITERAL_STRING("\u27EA"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // mathematical left double angle bracket
	{ NS_LITERAL_STRING("\u27EB"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // mathematical right double angle bracket
	{ NS_LITERAL_STRING("\u27EC"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // mathematical left white tortoise shell bracket
	{ NS_LITERAL_STRING("\u27ED"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // mathematical right white tortoise shell bracket
	{ NS_LITERAL_STRING("\u27EE"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // mathematical left flattened parenthesis
	{ NS_LITERAL_STRING("\u27EF"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // mathematical right flattened parenthesis
	{ NS_LITERAL_STRING("\u27F0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // upwards quadruple arrow
	{ NS_LITERAL_STRING("\u27F1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // downwards quadruple arrow
	{ NS_LITERAL_STRING("\u27F5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &LongLeftArrow;
	{ NS_LITERAL_STRING("\u27F6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &LongRightArrow;
	{ NS_LITERAL_STRING("\u27F7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &LongLeftRightArrow;
	{ NS_LITERAL_STRING("\u27F8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &DoubleLongLeftArrow;
	{ NS_LITERAL_STRING("\u27F9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &DoubleLongRightArrow;
	{ NS_LITERAL_STRING("\u27FA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &DoubleLongLeftRightArrow;
	{ NS_LITERAL_STRING("\u27FB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // long leftwards arrow from bar
	{ NS_LITERAL_STRING("\u27FC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // long rightwards arrow from bar
	{ NS_LITERAL_STRING("\u27FD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // long leftwards double arrow from bar
	{ NS_LITERAL_STRING("\u27FE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // long rightwards double arrow from bar
	{ NS_LITERAL_STRING("\u27FF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // long rightwards squiggle arrow
	{ NS_LITERAL_STRING("\u2900"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards two-headed arrow with vertical stroke
	{ NS_LITERAL_STRING("\u2901"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards two-headed arrow with double vertical stroke
	{ NS_LITERAL_STRING("\u2902"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards double arrow with vertical stroke
	{ NS_LITERAL_STRING("\u2903"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards double arrow with vertical stroke
	{ NS_LITERAL_STRING("\u2904"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // left right double arrow with vertical stroke
	{ NS_LITERAL_STRING("\u2905"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards two-headed arrow from bar
	{ NS_LITERAL_STRING("\u2906"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards double arrow from bar
	{ NS_LITERAL_STRING("\u2907"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards double arrow from bar
	{ NS_LITERAL_STRING("\u2908"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // downwards arrow with horizontal stroke
	{ NS_LITERAL_STRING("\u2909"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // upwards arrow with horizontal stroke
	{ NS_LITERAL_STRING("\u290A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // upwards triple arrow
	{ NS_LITERAL_STRING("\u290B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // downwards triple arrow
	{ NS_LITERAL_STRING("\u290C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // leftwards double dash arrow
	{ NS_LITERAL_STRING("\u290D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards double dash arrow
	{ NS_LITERAL_STRING("\u290E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // leftwards triple dash arrow
	{ NS_LITERAL_STRING("\u290F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards triple dash arrow
	{ NS_LITERAL_STRING("\u2910"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // rightwards two-headed triple dash arrow
	{ NS_LITERAL_STRING("\u2911"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow with dotted stem
	{ NS_LITERAL_STRING("\u2912"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &UpArrowBar;
	{ NS_LITERAL_STRING("\u2913"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &DownArrowBar;
	{ NS_LITERAL_STRING("\u2914"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow with tail with vertical stroke
	{ NS_LITERAL_STRING("\u2915"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow with tail with double vertical stroke
	{ NS_LITERAL_STRING("\u2916"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards two-headed arrow with tail
	{ NS_LITERAL_STRING("\u2917"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards two-headed arrow with tail with vertical stroke
	{ NS_LITERAL_STRING("\u2918"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards two-headed arrow with tail with double vertical stroke
	{ NS_LITERAL_STRING("\u2919"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow-tail
	{ NS_LITERAL_STRING("\u291A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow-tail
	{ NS_LITERAL_STRING("\u291B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards double arrow-tail
	{ NS_LITERAL_STRING("\u291C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards double arrow-tail
	{ NS_LITERAL_STRING("\u291D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow to black diamond
	{ NS_LITERAL_STRING("\u291E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow to black diamond
	{ NS_LITERAL_STRING("\u291F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow from bar to black diamond
	{ NS_LITERAL_STRING("\u2920"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow from bar to black diamond
	{ NS_LITERAL_STRING("\u2923"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // north west arrow with hook
	{ NS_LITERAL_STRING("\u2924"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // north east arrow with hook
	{ NS_LITERAL_STRING("\u2925"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // south east arrow with hook
	{ NS_LITERAL_STRING("\u2926"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // south west arrow with hook
	{ NS_LITERAL_STRING("\u2927"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // north west arrow and north east arrow
	{ NS_LITERAL_STRING("\u2928"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // north east arrow and south east arrow
	{ NS_LITERAL_STRING("\u2929"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // south east arrow and south west arrow
	{ NS_LITERAL_STRING("\u292A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // south west arrow and north west arrow
	{ NS_LITERAL_STRING("\u292B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // rising diagonal crossing falling diagonal
	{ NS_LITERAL_STRING("\u292C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // falling diagonal crossing rising diagonal
	{ NS_LITERAL_STRING("\u292D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // south east arrow crossing north east arrow
	{ NS_LITERAL_STRING("\u292E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // north east arrow crossing south east arrow
	{ NS_LITERAL_STRING("\u292F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // falling diagonal crossing north east arrow
	{ NS_LITERAL_STRING("\u2930"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // rising diagonal crossing south east arrow
	{ NS_LITERAL_STRING("\u2931"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // north east arrow crossing north west arrow
	{ NS_LITERAL_STRING("\u2932"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // north west arrow crossing north east arrow
	{ NS_LITERAL_STRING("\u2933"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // wave arrow pointing directly right
	{ NS_LITERAL_STRING("\u2934"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // arrow pointing rightwards then curving upwards
	{ NS_LITERAL_STRING("\u2935"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // arrow pointing rightwards then curving downwards
	{ NS_LITERAL_STRING("\u2936"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // arrow pointing downwards then curving leftwards
	{ NS_LITERAL_STRING("\u2937"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // arrow pointing downwards then curving rightwards
	{ NS_LITERAL_STRING("\u2938"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // right-side arc clockwise arrow
	{ NS_LITERAL_STRING("\u2939"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // left-side arc anticlockwise arrow
	{ NS_LITERAL_STRING("\u293A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // top arc anticlockwise arrow
	{ NS_LITERAL_STRING("\u293B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // bottom arc anticlockwise arrow
	{ NS_LITERAL_STRING("\u293C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // top arc clockwise arrow with minus
	{ NS_LITERAL_STRING("\u293D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // top arc anticlockwise arrow with plus
	{ NS_LITERAL_STRING("\u293E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // lower right semicircular clockwise arrow
	{ NS_LITERAL_STRING("\u293F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // lower left semicircular anticlockwise arrow
	{ NS_LITERAL_STRING("\u2940"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // anticlockwise closed circle arrow
	{ NS_LITERAL_STRING("\u2941"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // clockwise closed circle arrow
	{ NS_LITERAL_STRING("\u2942"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow above short leftwards arrow
	{ NS_LITERAL_STRING("\u2943"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow above short rightwards arrow
	{ NS_LITERAL_STRING("\u2944"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // short rightwards arrow above leftwards arrow
	{ NS_LITERAL_STRING("\u2945"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow with plus below
	{ NS_LITERAL_STRING("\u2946"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow with plus below
	{ NS_LITERAL_STRING("\u2947"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow through x
	{ NS_LITERAL_STRING("\u2948"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // left right arrow through small circle
	{ NS_LITERAL_STRING("\u2949"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // upwards two-headed arrow from small circle
	{ NS_LITERAL_STRING("\u294A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // left barb up right barb down harpoon
	{ NS_LITERAL_STRING("\u294B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // left barb down right barb up harpoon
	{ NS_LITERAL_STRING("\u294C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // up barb right down barb left harpoon
	{ NS_LITERAL_STRING("\u294D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // up barb left down barb right harpoon
	{ NS_LITERAL_STRING("\u294E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &LeftRightVector;
	{ NS_LITERAL_STRING("\u294F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &RightUpDownVector;
	{ NS_LITERAL_STRING("\u2950"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &DownLeftRightVector;
	{ NS_LITERAL_STRING("\u2951"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &LeftUpDownVector;
	{ NS_LITERAL_STRING("\u2952"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &LeftVectorBar;
	{ NS_LITERAL_STRING("\u2953"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &RightVectorBar;
	{ NS_LITERAL_STRING("\u2954"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &RightUpVectorBar;
	{ NS_LITERAL_STRING("\u2955"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &RightDownVectorBar;
	{ NS_LITERAL_STRING("\u2956"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &DownLeftVectorBar;
	{ NS_LITERAL_STRING("\u2957"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &DownRightVectorBar;
	{ NS_LITERAL_STRING("\u2958"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &LeftUpVectorBar;
	{ NS_LITERAL_STRING("\u2959"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &LeftDownVectorBar;
	{ NS_LITERAL_STRING("\u295A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &LeftTeeVector;
	{ NS_LITERAL_STRING("\u295B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &RightTeeVector;
	{ NS_LITERAL_STRING("\u295C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &RightUpTeeVector;
	{ NS_LITERAL_STRING("\u295D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &RightDownTeeVector;
	{ NS_LITERAL_STRING("\u295E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &DownLeftTeeVector;
	{ NS_LITERAL_STRING("\u295F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &DownRightTeeVector;
	{ NS_LITERAL_STRING("\u2960"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &LeftUpTeeVector;
	{ NS_LITERAL_STRING("\u2961"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &LeftDownTeeVector;
	{ NS_LITERAL_STRING("\u2962"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards harpoon with barb up above leftwards harpoon with barb down
	{ NS_LITERAL_STRING("\u2963"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // upwards harpoon with barb left beside upwards harpoon with barb right
	{ NS_LITERAL_STRING("\u2964"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards harpoon with barb up above rightwards harpoon with barb down
	{ NS_LITERAL_STRING("\u2965"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // downwards harpoon with barb left beside downwards harpoon with barb right
	{ NS_LITERAL_STRING("\u2966"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards harpoon with barb up above rightwards harpoon with barb up
	{ NS_LITERAL_STRING("\u2967"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards harpoon with barb down above rightwards harpoon with barb down
	{ NS_LITERAL_STRING("\u2968"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards harpoon with barb up above leftwards harpoon with barb up
	{ NS_LITERAL_STRING("\u2969"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards harpoon with barb down above leftwards harpoon with barb down
	{ NS_LITERAL_STRING("\u296A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards harpoon with barb up above long dash
	{ NS_LITERAL_STRING("\u296B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards harpoon with barb down below long dash
	{ NS_LITERAL_STRING("\u296C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards harpoon with barb up above long dash
	{ NS_LITERAL_STRING("\u296D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards harpoon with barb down below long dash
	{ NS_LITERAL_STRING("\u296E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &UpEquilibrium;
	{ NS_LITERAL_STRING("\u296F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // &ReverseUpEquilibrium;
	{ NS_LITERAL_STRING("\u2970"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // &RoundImplies;
	{ NS_LITERAL_STRING("\u2971"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // equals sign above rightwards arrow
	{ NS_LITERAL_STRING("\u2972"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // tilde operator above rightwards arrow
	{ NS_LITERAL_STRING("\u2973"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow above tilde operator
	{ NS_LITERAL_STRING("\u2974"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow above tilde operator
	{ NS_LITERAL_STRING("\u2975"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // rightwards arrow above almost equal to
	{ NS_LITERAL_STRING("\u2976"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // less-than above leftwards arrow
	{ NS_LITERAL_STRING("\u2977"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow through less-than
	{ NS_LITERAL_STRING("\u2978"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // greater-than above rightwards arrow
	{ NS_LITERAL_STRING("\u2979"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // subset above rightwards arrow
	{ NS_LITERAL_STRING("\u297A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // leftwards arrow through subset
	{ NS_LITERAL_STRING("\u297B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // superset above leftwards arrow
	{ NS_LITERAL_STRING("\u297C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // left fish tail
	{ NS_LITERAL_STRING("\u297D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_ACCENT }, // right fish tail
	{ NS_LITERAL_STRING("\u297E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // up fish tail
	{ NS_LITERAL_STRING("\u297F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // down fish tail
	{ NS_LITERAL_STRING("\u2980"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE }, // triple direction:vertical bar delimiter
	{ NS_LITERAL_STRING("\u2980"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE }, // triple direction:vertical bar delimiter
	{ NS_LITERAL_STRING("\u2981"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // z notation spot
	{ NS_LITERAL_STRING("\u2982"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // z notation type colon
	{ NS_LITERAL_STRING("\u2983"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // left white curly bracket
	{ NS_LITERAL_STRING("\u2984"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // right white curly bracket
	{ NS_LITERAL_STRING("\u2985"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // left white parenthesis
	{ NS_LITERAL_STRING("\u2986"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // right white parenthesis
	{ NS_LITERAL_STRING("\u2987"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // z notation left image bracket
	{ NS_LITERAL_STRING("\u2988"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // z notation right image bracket
	{ NS_LITERAL_STRING("\u2989"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // z notation left binding bracket
	{ NS_LITERAL_STRING("\u298A"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // z notation right binding bracket
	{ NS_LITERAL_STRING("\u298B"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // left square bracket with underbar
	{ NS_LITERAL_STRING("\u298C"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // right square bracket with underbar
	{ NS_LITERAL_STRING("\u298D"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // left square bracket with tick in top corner
	{ NS_LITERAL_STRING("\u298E"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // right square bracket with tick in bottom corner
	{ NS_LITERAL_STRING("\u298F"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // left square bracket with tick in bottom corner
	{ NS_LITERAL_STRING("\u2990"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // right square bracket with tick in top corner
	{ NS_LITERAL_STRING("\u2991"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // left angle bracket with dot
	{ NS_LITERAL_STRING("\u2992"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // right angle bracket with dot
	{ NS_LITERAL_STRING("\u2993"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // left arc less-than bracket
	{ NS_LITERAL_STRING("\u2994"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // right arc greater-than bracket
	{ NS_LITERAL_STRING("\u2995"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // double left arc greater-than bracket
	{ NS_LITERAL_STRING("\u2996"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // double right arc less-than bracket
	{ NS_LITERAL_STRING("\u2997"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // left black tortoise shell bracket
	{ NS_LITERAL_STRING("\u2998"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // right black tortoise shell bracket
	{ NS_LITERAL_STRING("\u2999"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // dotted fence
	{ NS_LITERAL_STRING("\u299A"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // vertical zigzag line
	{ NS_LITERAL_STRING("\u299B"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // measured angle opening left
	{ NS_LITERAL_STRING("\u299C"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // right angle variant with square
	{ NS_LITERAL_STRING("\u299D"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // measured right angle with dot
	{ NS_LITERAL_STRING("\u299E"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // angle with s inside
	{ NS_LITERAL_STRING("\u299F"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // acute angle
	{ NS_LITERAL_STRING("\u29A0"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // spherical angle opening left
	{ NS_LITERAL_STRING("\u29A1"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // spherical angle opening up
	{ NS_LITERAL_STRING("\u29A2"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // turned angle
	{ NS_LITERAL_STRING("\u29A3"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // reversed angle
	{ NS_LITERAL_STRING("\u29A4"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // angle with underbar
	{ NS_LITERAL_STRING("\u29A5"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // reversed angle with underbar
	{ NS_LITERAL_STRING("\u29A6"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // oblique angle opening up
	{ NS_LITERAL_STRING("\u29A7"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // oblique angle opening down
	{ NS_LITERAL_STRING("\u29A8"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // measured angle with open arm ending in arrow pointing up and right
	{ NS_LITERAL_STRING("\u29A9"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // measured angle with open arm ending in arrow pointing up and left
	{ NS_LITERAL_STRING("\u29AA"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // measured angle with open arm ending in arrow pointing down and right
	{ NS_LITERAL_STRING("\u29AB"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // measured angle with open arm ending in arrow pointing down and left
	{ NS_LITERAL_STRING("\u29AC"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // measured angle with open arm ending in arrow pointing right and up
	{ NS_LITERAL_STRING("\u29AD"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // measured angle with open arm ending in arrow pointing left and up
	{ NS_LITERAL_STRING("\u29AE"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // measured angle with open arm ending in arrow pointing right and down
	{ NS_LITERAL_STRING("\u29AF"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // measured angle with open arm ending in arrow pointing left and down
	{ NS_LITERAL_STRING("\u29B0"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // reversed empty set
	{ NS_LITERAL_STRING("\u29B1"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // empty set with overbar
	{ NS_LITERAL_STRING("\u29B2"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // empty set with small circle above
	{ NS_LITERAL_STRING("\u29B3"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // empty set with right arrow above
	{ NS_LITERAL_STRING("\u29B4"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // empty set with left arrow above
	{ NS_LITERAL_STRING("\u29B5"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // circle with horizontal bar
	{ NS_LITERAL_STRING("\u29B6"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled vertical bar
	{ NS_LITERAL_STRING("\u29B7"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled parallel
	{ NS_LITERAL_STRING("\u29B8"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled reverse solidus
	{ NS_LITERAL_STRING("\u29B9"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled perpendicular
	{ NS_LITERAL_STRING("\u29BA"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circle divided by horizontal bar and top half divided by vertical bar
	{ NS_LITERAL_STRING("\u29BB"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circle with superimposed x
	{ NS_LITERAL_STRING("\u29BC"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled anticlockwise-rotated division sign
	{ NS_LITERAL_STRING("\u29BD"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // up arrow through circle
	{ NS_LITERAL_STRING("\u29BE"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled white bullet
	{ NS_LITERAL_STRING("\u29BF"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled bullet
	{ NS_LITERAL_STRING("\u29C0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // circled less-than
	{ NS_LITERAL_STRING("\u29C1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // circled greater-than
	{ NS_LITERAL_STRING("\u29C2"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // circle with small circle to the right
	{ NS_LITERAL_STRING("\u29C3"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // circle with two horizontal strokes to the right
	{ NS_LITERAL_STRING("\u29C4"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // squared rising diagonal slash
	{ NS_LITERAL_STRING("\u29C5"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // squared falling diagonal slash
	{ NS_LITERAL_STRING("\u29C6"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // squared asterisk
	{ NS_LITERAL_STRING("\u29C7"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // squared small circle
	{ NS_LITERAL_STRING("\u29C8"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // squared square
	{ NS_LITERAL_STRING("\u29C9"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // two joined squares
	{ NS_LITERAL_STRING("\u29CA"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // triangle with dot above
	{ NS_LITERAL_STRING("\u29CB"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // triangle with underbar
	{ NS_LITERAL_STRING("\u29CC"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // s in triangle
	{ NS_LITERAL_STRING("\u29CD"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // triangle with serifs at bottom
	{ NS_LITERAL_STRING("\u29CE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // right triangle above left triangle
	{ NS_LITERAL_STRING("\u29CF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &LeftTriangleBar;
	{ NS_LITERAL_STRING("\u29D0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &RightTriangleBar;
	{ NS_LITERAL_STRING("\u29D1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // bowtie with left half black
	{ NS_LITERAL_STRING("\u29D2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // bowtie with right half black
	{ NS_LITERAL_STRING("\u29D3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // black bowtie
	{ NS_LITERAL_STRING("\u29D4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // times with left half black
	{ NS_LITERAL_STRING("\u29D5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // times with right half black
	{ NS_LITERAL_STRING("\u29D6"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // white hourglass
	{ NS_LITERAL_STRING("\u29D7"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // black hourglass
	{ NS_LITERAL_STRING("\u29D8"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // left wiggly fence
	{ NS_LITERAL_STRING("\u29D9"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // right wiggly fence
	{ NS_LITERAL_STRING("\u29DB"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // right double wiggly fence
	{ NS_LITERAL_STRING("\u29DC"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // incomplete infinity
	{ NS_LITERAL_STRING("\u29DD"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // tie over infinity
	{ NS_LITERAL_STRING("\u29DE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // infinity negated with vertical bar
	{ NS_LITERAL_STRING("\u29DF"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // double-ended multimap
	{ NS_LITERAL_STRING("\u29E0"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // square with contoured outline
	{ NS_LITERAL_STRING("\u29E1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // increases as
	{ NS_LITERAL_STRING("\u29E2"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // shuffle product
	{ NS_LITERAL_STRING("\u29E3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equals sign and slanted parallel
	{ NS_LITERAL_STRING("\u29E4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equals sign and slanted parallel with tilde above
	{ NS_LITERAL_STRING("\u29E5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // identical to and slanted parallel
	{ NS_LITERAL_STRING("\u29E6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // gleich stark
	{ NS_LITERAL_STRING("\u29E7"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // thermodynamic
	{ NS_LITERAL_STRING("\u29E8"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // down-pointing triangle with left half black
	{ NS_LITERAL_STRING("\u29E9"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // down-pointing triangle with right half black
	{ NS_LITERAL_STRING("\u29EA"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // black diamond with down arrow
	{ NS_LITERAL_STRING("\u29EB"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // black lozenge
	{ NS_LITERAL_STRING("\u29EC"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // white circle with down arrow
	{ NS_LITERAL_STRING("\u29ED"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // black circle with down arrow
	{ NS_LITERAL_STRING("\u29EE"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // error-barred white square
	{ NS_LITERAL_STRING("\u29EF"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // error-barred black square
	{ NS_LITERAL_STRING("\u29F0"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // error-barred white diamond
	{ NS_LITERAL_STRING("\u29F1"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // error-barred black diamond
	{ NS_LITERAL_STRING("\u29F2"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // error-barred white circle
	{ NS_LITERAL_STRING("\u29F3"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // error-barred black circle
	{ NS_LITERAL_STRING("\u29F4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // rule-delayed
	{ NS_LITERAL_STRING("\u29F5"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // reverse solidus operator
	{ NS_LITERAL_STRING("\u29F6"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // solidus with overbar
	{ NS_LITERAL_STRING("\u29F7"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // reverse solidus with horizontal stroke
	{ NS_LITERAL_STRING("\u29F8"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // big solidus
	{ NS_LITERAL_STRING("\u29F9"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // big reverse solidus
	{ NS_LITERAL_STRING("\u29FA"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // double plus
	{ NS_LITERAL_STRING("\u29FB"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // triple plus
	{ NS_LITERAL_STRING("\u29FC"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // left-pointing curved angle bracket
	{ NS_LITERAL_STRING("\u29FD"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // right-pointing curved angle bracket
	{ NS_LITERAL_STRING("\u29FE"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // tiny
	{ NS_LITERAL_STRING("\u29FF"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // miny
	{ NS_LITERAL_STRING("\u2A00"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &bigodot;
	{ NS_LITERAL_STRING("\u2A01"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &bigoplus;
	{ NS_LITERAL_STRING("\u2A02"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &bigotimes;
	{ NS_LITERAL_STRING("\u2A03"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // n-ary union operator with dot
	{ NS_LITERAL_STRING("\u2A04"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &biguplus;
	{ NS_LITERAL_STRING("\u2A05"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // n-ary square intersection operator
	{ NS_LITERAL_STRING("\u2A06"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // &bigsqcup;
	{ NS_LITERAL_STRING("\u2A07"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // two logical and operator
	{ NS_LITERAL_STRING("\u2A08"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // two logical or operator
	{ NS_LITERAL_STRING("\u2A09"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // n-ary times operator
	{ NS_LITERAL_STRING("\u2A0A"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_MIRRORABLE }, // modulo two sum
	{ NS_LITERAL_STRING("\u2A0B"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // summation with integral
	{ NS_LITERAL_STRING("\u2A0C"), 1, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // quadruple integral operator
	{ NS_LITERAL_STRING("\u2A0D"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // finite part integral
	{ NS_LITERAL_STRING("\u2A0E"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // integral with double stroke
	{ NS_LITERAL_STRING("\u2A0F"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // integral average with slash
	{ NS_LITERAL_STRING("\u2A10"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // circulation function
	{ NS_LITERAL_STRING("\u2A11"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL }, // anticlockwise integration
	{ NS_LITERAL_STRING("\u2A12"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // line integration with rectangular path around pole
	{ NS_LITERAL_STRING("\u2A13"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // line integration with semicircular path around pole
	{ NS_LITERAL_STRING("\u2A14"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // line integration not including the pole
	{ NS_LITERAL_STRING("\u2A15"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // integral around a point operator
	{ NS_LITERAL_STRING("\u2A16"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // quaternion integral operator
	{ NS_LITERAL_STRING("\u2A17"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // integral with leftwards arrow with hook
	{ NS_LITERAL_STRING("\u2A18"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // integral with times sign
	{ NS_LITERAL_STRING("\u2A19"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // integral with intersection
	{ NS_LITERAL_STRING("\u2A1A"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // integral with union
	{ NS_LITERAL_STRING("\u2A1B"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // integral with overbar
	{ NS_LITERAL_STRING("\u2A1C"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_SYMMETRIC | NS_MATHML_OPERATOR_INTEGRAL | NS_MATHML_OPERATOR_MIRRORABLE }, // integral with underbar
	{ NS_LITERAL_STRING("\u2A1D"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // join
	{ NS_LITERAL_STRING("\u2A1E"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // large left triangle operator
	{ NS_LITERAL_STRING("\u2A1F"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // z notation schema composition
	{ NS_LITERAL_STRING("\u2A20"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // z notation schema piping
	{ NS_LITERAL_STRING("\u2A21"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // z notation schema projection
	{ NS_LITERAL_STRING("\u2A22"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // plus sign with small circle above
	{ NS_LITERAL_STRING("\u2A23"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // plus sign with circumflex accent above
	{ NS_LITERAL_STRING("\u2A24"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // plus sign with tilde above
	{ NS_LITERAL_STRING("\u2A25"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // plus sign with dot below
	{ NS_LITERAL_STRING("\u2A26"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // plus sign with tilde below
	{ NS_LITERAL_STRING("\u2A27"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // plus sign with subscript two
	{ NS_LITERAL_STRING("\u2A28"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // plus sign with black triangle
	{ NS_LITERAL_STRING("\u2A29"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // minus sign with comma above
	{ NS_LITERAL_STRING("\u2A2A"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // minus sign with dot below
	{ NS_LITERAL_STRING("\u2A2B"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // minus sign with falling dots
	{ NS_LITERAL_STRING("\u2A2C"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // minus sign with rising dots
	{ NS_LITERAL_STRING("\u2A2D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // plus sign in left half circle
	{ NS_LITERAL_STRING("\u2A2E"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // plus sign in right half circle
	{ NS_LITERAL_STRING("\u2A2F"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &Cross;
	{ NS_LITERAL_STRING("\u2A30"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // multiplication sign with dot above
	{ NS_LITERAL_STRING("\u2A31"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // multiplication sign with underbar
	{ NS_LITERAL_STRING("\u2A32"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // semidirect product with bottom closed
	{ NS_LITERAL_STRING("\u2A33"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // smash product
	{ NS_LITERAL_STRING("\u2A34"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // multiplication sign in left half circle
	{ NS_LITERAL_STRING("\u2A35"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // multiplication sign in right half circle
	{ NS_LITERAL_STRING("\u2A36"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled multiplication sign with circumflex accent
	{ NS_LITERAL_STRING("\u2A37"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // multiplication sign in double circle
	{ NS_LITERAL_STRING("\u2A38"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // circled division sign
	{ NS_LITERAL_STRING("\u2A39"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // plus sign in triangle
	{ NS_LITERAL_STRING("\u2A3A"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // minus sign in triangle
	{ NS_LITERAL_STRING("\u2A3B"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // multiplication sign in triangle
	{ NS_LITERAL_STRING("\u2A3C"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // interior product
	{ NS_LITERAL_STRING("\u2A3D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // righthand interior product
	{ NS_LITERAL_STRING("\u2A3E"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // z notation relational composition
	{ NS_LITERAL_STRING("\u2A3F"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // amalgamation or coproduct
	{ NS_LITERAL_STRING("\u2A40"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // intersection with dot
	{ NS_LITERAL_STRING("\u2A41"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // union with minus sign
	{ NS_LITERAL_STRING("\u2A42"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // union with overbar
	{ NS_LITERAL_STRING("\u2A43"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // intersection with overbar
	{ NS_LITERAL_STRING("\u2A44"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // intersection with logical and
	{ NS_LITERAL_STRING("\u2A45"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // union with logical or
	{ NS_LITERAL_STRING("\u2A46"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // union above intersection
	{ NS_LITERAL_STRING("\u2A47"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // intersection above union
	{ NS_LITERAL_STRING("\u2A48"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // union above bar above intersection
	{ NS_LITERAL_STRING("\u2A49"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // intersection above bar above union
	{ NS_LITERAL_STRING("\u2A4A"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // union beside and joined with union
	{ NS_LITERAL_STRING("\u2A4B"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // intersection beside and joined with intersection
	{ NS_LITERAL_STRING("\u2A4C"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // closed union with serifs
	{ NS_LITERAL_STRING("\u2A4D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // closed intersection with serifs
	{ NS_LITERAL_STRING("\u2A4E"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // double square intersection
	{ NS_LITERAL_STRING("\u2A4F"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // double square union
	{ NS_LITERAL_STRING("\u2A50"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // closed union with serifs and smash product
	{ NS_LITERAL_STRING("\u2A51"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // logical and with dot above
	{ NS_LITERAL_STRING("\u2A52"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // logical or with dot above
	{ NS_LITERAL_STRING("\u2A53"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &And;
	{ NS_LITERAL_STRING("\u2A54"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &Or;
	{ NS_LITERAL_STRING("\u2A55"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // two intersecting logical and
	{ NS_LITERAL_STRING("\u2A56"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // two intersecting logical or
	{ NS_LITERAL_STRING("\u2A57"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // sloping large or
	{ NS_LITERAL_STRING("\u2A58"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // sloping large and
	{ NS_LITERAL_STRING("\u2A59"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // logical or overlapping logical and
	{ NS_LITERAL_STRING("\u2A5A"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // logical and with middle stem
	{ NS_LITERAL_STRING("\u2A5B"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // logical or with middle stem
	{ NS_LITERAL_STRING("\u2A5C"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // logical and with horizontal dash
	{ NS_LITERAL_STRING("\u2A5D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // logical or with horizontal dash
	{ NS_LITERAL_STRING("\u2A5E"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // logical and with double overbar
	{ NS_LITERAL_STRING("\u2A5F"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // logical and with underbar
	{ NS_LITERAL_STRING("\u2A60"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // logical and with double underbar
	{ NS_LITERAL_STRING("\u2A61"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // small vee with underbar
	{ NS_LITERAL_STRING("\u2A62"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // logical or with double overbar
	{ NS_LITERAL_STRING("\u2A63"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // logical or with double underbar
	{ NS_LITERAL_STRING("\u2A64"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // z notation domain antirestriction
	{ NS_LITERAL_STRING("\u2A65"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // z notation range antirestriction
	{ NS_LITERAL_STRING("\u2A66"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equals sign with dot below
	{ NS_LITERAL_STRING("\u2A67"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // identical with dot above
	{ NS_LITERAL_STRING("\u2A68"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // triple horizontal bar with double vertical stroke
	{ NS_LITERAL_STRING("\u2A69"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // triple horizontal bar with triple vertical stroke
	{ NS_LITERAL_STRING("\u2A6A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // tilde operator with dot above
	{ NS_LITERAL_STRING("\u2A6B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // tilde operator with rising dots
	{ NS_LITERAL_STRING("\u2A6C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // similar minus similar
	{ NS_LITERAL_STRING("\u2A6D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // congruent with dot above
	{ NS_LITERAL_STRING("\u2A6E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equals with asterisk
	{ NS_LITERAL_STRING("\u2A6F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // almost equal to with circumflex accent
	{ NS_LITERAL_STRING("\u2A70"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // approximately equal or equal to
	{ NS_LITERAL_STRING("\u2A71"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // equals sign above plus sign
	{ NS_LITERAL_STRING("\u2A72"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // plus sign above equals sign
	{ NS_LITERAL_STRING("\u2A73"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equals sign above tilde operator
	{ NS_LITERAL_STRING("\u2A74"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double colon equal
	{ NS_LITERAL_STRING("\u2A75"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &Equal;
	{ NS_LITERAL_STRING("\u2A76"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // three consecutive equals signs
	{ NS_LITERAL_STRING("\u2A77"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equals sign with two dots above and two dots below
	{ NS_LITERAL_STRING("\u2A78"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equivalent with four dots above
	{ NS_LITERAL_STRING("\u2A79"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than with circle inside
	{ NS_LITERAL_STRING("\u2A7A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than with circle inside
	{ NS_LITERAL_STRING("\u2A7B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than with question mark above
	{ NS_LITERAL_STRING("\u2A7C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than with question mark above
	{ NS_LITERAL_STRING("\u2A7D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &LessSlantEqual;
	{ NS_LITERAL_STRING("\u2A7E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &GreaterSlantEqual;
	{ NS_LITERAL_STRING("\u2A7F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than or slanted equal to with dot inside
	{ NS_LITERAL_STRING("\u2A80"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than or slanted equal to with dot inside
	{ NS_LITERAL_STRING("\u2A81"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than or slanted equal to with dot above
	{ NS_LITERAL_STRING("\u2A82"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than or slanted equal to with dot above
	{ NS_LITERAL_STRING("\u2A83"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than or slanted equal to with dot above right
	{ NS_LITERAL_STRING("\u2A84"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than or slanted equal to with dot above left
	{ NS_LITERAL_STRING("\u2A85"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &lessapprox;
	{ NS_LITERAL_STRING("\u2A86"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &gtrapprox;
	{ NS_LITERAL_STRING("\u2A87"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than and single-line not equal to
	{ NS_LITERAL_STRING("\u2A88"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than and single-line not equal to
	{ NS_LITERAL_STRING("\u2A89"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than and not approximate
	{ NS_LITERAL_STRING("\u2A8A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than and not approximate
	{ NS_LITERAL_STRING("\u2A8B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &lesseqqgtr;
	{ NS_LITERAL_STRING("\u2A8C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &gtreqqless;
	{ NS_LITERAL_STRING("\u2A8D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than above similar or equal
	{ NS_LITERAL_STRING("\u2A8E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than above similar or equal
	{ NS_LITERAL_STRING("\u2A8F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than above similar above greater-than
	{ NS_LITERAL_STRING("\u2A90"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than above similar above less-than
	{ NS_LITERAL_STRING("\u2A91"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than above greater-than above double-line equal
	{ NS_LITERAL_STRING("\u2A92"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than above less-than above double-line equal
	{ NS_LITERAL_STRING("\u2A93"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than above slanted equal above greater-than above slanted equal
	{ NS_LITERAL_STRING("\u2A94"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than above slanted equal above less-than above slanted equal
	{ NS_LITERAL_STRING("\u2A95"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // slanted equal to or less-than
	{ NS_LITERAL_STRING("\u2A96"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // slanted equal to or greater-than
	{ NS_LITERAL_STRING("\u2A97"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // slanted equal to or less-than with dot inside
	{ NS_LITERAL_STRING("\u2A98"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // slanted equal to or greater-than with dot inside
	{ NS_LITERAL_STRING("\u2A99"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double-line equal to or less-than
	{ NS_LITERAL_STRING("\u2A9A"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double-line equal to or greater-than
	{ NS_LITERAL_STRING("\u2A9B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double-line slanted equal to or less-than
	{ NS_LITERAL_STRING("\u2A9C"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double-line slanted equal to or greater-than
	{ NS_LITERAL_STRING("\u2A9D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // similar or less-than
	{ NS_LITERAL_STRING("\u2A9E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // similar or greater-than
	{ NS_LITERAL_STRING("\u2A9F"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // similar above less-than above equals sign
	{ NS_LITERAL_STRING("\u2AA0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // similar above greater-than above equals sign
	{ NS_LITERAL_STRING("\u2AA1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &LessLess;
	{ NS_LITERAL_STRING("\u2AA2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &GreaterGreater;
	{ NS_LITERAL_STRING("\u2AA3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double nested less-than with underbar
	{ NS_LITERAL_STRING("\u2AA4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than overlapping less-than
	{ NS_LITERAL_STRING("\u2AA5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than beside less-than
	{ NS_LITERAL_STRING("\u2AA6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than closed by curve
	{ NS_LITERAL_STRING("\u2AA7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than closed by curve
	{ NS_LITERAL_STRING("\u2AA8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // less-than closed by curve above slanted equal
	{ NS_LITERAL_STRING("\u2AA9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // greater-than closed by curve above slanted equal
	{ NS_LITERAL_STRING("\u2AAA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // smaller than
	{ NS_LITERAL_STRING("\u2AAB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // larger than
	{ NS_LITERAL_STRING("\u2AAC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // smaller than or equal to
	{ NS_LITERAL_STRING("\u2AAD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // larger than or equal to
	{ NS_LITERAL_STRING("\u2AAE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // equals sign with bumpy above
	{ NS_LITERAL_STRING("\u2AAF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &PrecedesEqual;
	{ NS_LITERAL_STRING("\u2AB0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &SucceedsEqual;
	{ NS_LITERAL_STRING("\u2AB1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // precedes above single-line not equal to
	{ NS_LITERAL_STRING("\u2AB2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // succeeds above single-line not equal to
	{ NS_LITERAL_STRING("\u2AB3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &prE;
	{ NS_LITERAL_STRING("\u2AB4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &scE;
	{ NS_LITERAL_STRING("\u2AB5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // precedes above not equal to
	{ NS_LITERAL_STRING("\u2AB6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // succeeds above not equal to
	{ NS_LITERAL_STRING("\u2AB7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &precapprox;
	{ NS_LITERAL_STRING("\u2AB8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &succapprox;
	{ NS_LITERAL_STRING("\u2AB9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // precedes above not almost equal to
	{ NS_LITERAL_STRING("\u2ABA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // succeeds above not almost equal to
	{ NS_LITERAL_STRING("\u2ABB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double precedes
	{ NS_LITERAL_STRING("\u2ABC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double succeeds
	{ NS_LITERAL_STRING("\u2ABD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // subset with dot
	{ NS_LITERAL_STRING("\u2ABE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // superset with dot
	{ NS_LITERAL_STRING("\u2ABF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // subset with plus sign below
	{ NS_LITERAL_STRING("\u2AC0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // superset with plus sign below
	{ NS_LITERAL_STRING("\u2AC1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // subset with multiplication sign below
	{ NS_LITERAL_STRING("\u2AC2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // superset with multiplication sign below
	{ NS_LITERAL_STRING("\u2AC3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // subset of or equal to with dot above
	{ NS_LITERAL_STRING("\u2AC4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // superset of or equal to with dot above
	{ NS_LITERAL_STRING("\u2AC5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &subseteqq;
	{ NS_LITERAL_STRING("\u2AC6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &supseteqq;
	{ NS_LITERAL_STRING("\u2AC7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // subset of above tilde operator
	{ NS_LITERAL_STRING("\u2AC8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // superset of above tilde operator
	{ NS_LITERAL_STRING("\u2AC9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // subset of above almost equal to
	{ NS_LITERAL_STRING("\u2ACA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // superset of above almost equal to
	{ NS_LITERAL_STRING("\u2ACB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // subset of above not equal to
	{ NS_LITERAL_STRING("\u2ACC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // superset of above not equal to
	{ NS_LITERAL_STRING("\u2ACD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // square left open box operator
	{ NS_LITERAL_STRING("\u2ACE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // square right open box operator
	{ NS_LITERAL_STRING("\u2ACF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // closed subset
	{ NS_LITERAL_STRING("\u2AD0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // closed superset
	{ NS_LITERAL_STRING("\u2AD1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // closed subset or equal to
	{ NS_LITERAL_STRING("\u2AD2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // closed superset or equal to
	{ NS_LITERAL_STRING("\u2AD3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // subset above superset
	{ NS_LITERAL_STRING("\u2AD4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // superset above subset
	{ NS_LITERAL_STRING("\u2AD5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // subset above subset
	{ NS_LITERAL_STRING("\u2AD6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // superset above superset
	{ NS_LITERAL_STRING("\u2AD7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // superset beside subset
	{ NS_LITERAL_STRING("\u2AD8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // superset beside and joined by dash with subset
	{ NS_LITERAL_STRING("\u2AD9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // element of opening downwards
	{ NS_LITERAL_STRING("\u2ADA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // pitchfork with tee top
	{ NS_LITERAL_STRING("\u2ADB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // transversal intersection
	{ NS_LITERAL_STRING("\u2ADC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // forking
	{ NS_LITERAL_STRING("\u2ADD"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // nonforking
	{ NS_LITERAL_STRING("\u2ADE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // short left tack
	{ NS_LITERAL_STRING("\u2ADF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // short down tack
	{ NS_LITERAL_STRING("\u2AE0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // short up tack
	{ NS_LITERAL_STRING("\u2AE1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // perpendicular with s
	{ NS_LITERAL_STRING("\u2AE2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // vertical bar triple right turnstile
	{ NS_LITERAL_STRING("\u2AE3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double vertical bar left turnstile
	{ NS_LITERAL_STRING("\u2AE4"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &DoubleLeftTee;
	{ NS_LITERAL_STRING("\u2AE5"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double vertical bar double left turnstile
	{ NS_LITERAL_STRING("\u2AE6"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // long dash from left member of double vertical
	{ NS_LITERAL_STRING("\u2AE7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // short down tack with overbar
	{ NS_LITERAL_STRING("\u2AE8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // short up tack with underbar
	{ NS_LITERAL_STRING("\u2AE9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // short up tack above short down tack
	{ NS_LITERAL_STRING("\u2AEA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double down tack
	{ NS_LITERAL_STRING("\u2AEB"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double up tack
	{ NS_LITERAL_STRING("\u2AEC"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double stroke not sign
	{ NS_LITERAL_STRING("\u2AEC"), 5, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // &Not;
	{ NS_LITERAL_STRING("\u2AED"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // reversed double stroke not sign
	{ NS_LITERAL_STRING("\u2AEE"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // does not divide with reversed negation slash
	{ NS_LITERAL_STRING("\u2AEF"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // vertical line with circle above
	{ NS_LITERAL_STRING("\u2AF0"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // vertical line with circle below
	{ NS_LITERAL_STRING("\u2AF1"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // down tack with circle below
	{ NS_LITERAL_STRING("\u2AF2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // parallel with horizontal stroke
	{ NS_LITERAL_STRING("\u2AF3"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // parallel with tilde operator
	{ NS_LITERAL_STRING("\u2AF4"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // triple vertical bar binary relation
	{ NS_LITERAL_STRING("\u2AF5"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // triple vertical bar with horizontal stroke
	{ NS_LITERAL_STRING("\u2AF6"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // triple colon operator
	{ NS_LITERAL_STRING("\u2AF7"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // triple nested less-than
	{ NS_LITERAL_STRING("\u2AF8"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // triple nested greater-than
	{ NS_LITERAL_STRING("\u2AF9"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double-line slanted less-than or equal to
	{ NS_LITERAL_STRING("\u2AFA"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // double-line slanted greater-than or equal to
	{ NS_LITERAL_STRING("\u2AFB"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // triple solidus binary relation
	{ NS_LITERAL_STRING("\u2AFC"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // large triple vertical bar operator
	{ NS_LITERAL_STRING("\u2AFD"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // double solidus operator
	{ NS_LITERAL_STRING("\u2AFE"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // white vertical bar
	{ NS_LITERAL_STRING("\u2AFF"), 2, 1, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_LARGEOP | NS_MATHML_OPERATOR_MOVABLELIMITS | NS_MATHML_OPERATOR_SYMMETRIC }, // n-ary white vertical bar
	{ NS_LITERAL_STRING("\u2B45"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // leftwards quadruple arrow
	{ NS_LITERAL_STRING("\u2B46"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_STRETCHY }, // rightwards quadruple arrow
	{ NS_LITERAL_STRING("\uFE35"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &OverParenthesis; (MathML 2.0)
	{ NS_LITERAL_STRING("\uFE36"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &UnderParenthesis; (MathML 2.0)
	{ NS_LITERAL_STRING("\uFE37"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT }, // &OverBrace; (MathML 2.0)
	{ NS_LITERAL_STRING("\uFE38"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_STRETCHY | NS_MATHML_OPERATOR_ACCENT } // &UnderBrace; (MathML 2.0)
};

static const OperatorData gCompoundOperTable[gCompoundOperCount] = {
	{ NS_LITERAL_STRING("\u0021\u0021"), 0, 1, NS_MATHML_OPERATOR_FORM_POSTFIX }, // !!
	{ NS_LITERAL_STRING("\u0021\u003D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // !=
	{ NS_LITERAL_STRING("\u0026\u0026"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // &amp;&amp;
	{ NS_LITERAL_STRING("\u002A\u002A"), 1, 1, NS_MATHML_OPERATOR_FORM_INFIX }, // **
	{ NS_LITERAL_STRING("\u002A\u003D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // *=
	{ NS_LITERAL_STRING("\u002B\u002B"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX }, // ++
	{ NS_LITERAL_STRING("\u002B\u002B"), 2, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // ++
	{ NS_LITERAL_STRING("\u002B\u003D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // +=
	{ NS_LITERAL_STRING("\u002D\u002D"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX }, // --
	{ NS_LITERAL_STRING("\u002D\u002D"), 2, 0, NS_MATHML_OPERATOR_FORM_PREFIX }, // --
	{ NS_LITERAL_STRING("\u002D\u003D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // -=
	{ NS_LITERAL_STRING("\u002D\u003E"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // ->
	{ NS_LITERAL_STRING("\u002E\u002E"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX }, // ..
	{ NS_LITERAL_STRING("\u002E\u002E\u002E"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX }, // ...
	{ NS_LITERAL_STRING("\u002F\u002F"), 1, 1, NS_MATHML_OPERATOR_FORM_INFIX }, // //
	{ NS_LITERAL_STRING("\u002F\u003D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // /=
	{ NS_LITERAL_STRING("\u003A\u003D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // :=
	{ NS_LITERAL_STRING("\u003C\u003D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &lt;=
	{ NS_LITERAL_STRING("\u003C\u003E"), 1, 1, NS_MATHML_OPERATOR_FORM_INFIX }, // &lt;>
	{ NS_LITERAL_STRING("\u003C\u20D2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &nvlt;
	{ NS_LITERAL_STRING("\u003D\u003D"), 4, 4, NS_MATHML_OPERATOR_FORM_INFIX }, // ==
	{ NS_LITERAL_STRING("\u003E\u003D"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // >=
	{ NS_LITERAL_STRING("\u003E\u20D2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &nvgt;
	{ NS_LITERAL_STRING("\u006C\u0069\u006D"), 3, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_MOVABLELIMITS }, // lim
	{ NS_LITERAL_STRING("\u006D\u0061\u0078"), 3, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_MOVABLELIMITS }, // max
	{ NS_LITERAL_STRING("\u006D\u0069\u006E"), 3, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_MOVABLELIMITS }, // min
	{ NS_LITERAL_STRING("\u007C\u007C"), 2, 2, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // ||
	{ NS_LITERAL_STRING("\u007C\u007C"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // multiple character operator: ||
	{ NS_LITERAL_STRING("\u007C\u007C"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // multiple character operator: ||
	{ NS_LITERAL_STRING("\u007C\u007C\u007C"), 2, 2, NS_MATHML_OPERATOR_FORM_INFIX | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // multiple character operator: |||
	{ NS_LITERAL_STRING("\u007C\u007C\u007C"), 0, 0, NS_MATHML_OPERATOR_FORM_POSTFIX | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // multiple character operator: |||
	{ NS_LITERAL_STRING("\u007C\u007C\u007C"), 0, 0, NS_MATHML_OPERATOR_FORM_PREFIX | NS_MATHML_OPERATOR_FENCE | NS_MATHML_OPERATOR_SYMMETRIC }, // multiple character operator: |||
	{ NS_LITERAL_STRING("\u2190\u200B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &ShortLeftArrow;
	{ NS_LITERAL_STRING("\u2191\u200B"), 2, 2, NS_MATHML_OPERATOR_FORM_INFIX }, // &ShortUpArrow;
	{ NS_LITERAL_STRING("\u2192\u200B"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &ShortRightArrow;
	{ NS_LITERAL_STRING("\u2193\u200B"), 2, 2, NS_MATHML_OPERATOR_FORM_INFIX }, // &ShortDownArrow;
	{ NS_LITERAL_STRING("\u223D\u0331"), 3, 3, NS_MATHML_OPERATOR_FORM_INFIX }, // reversed tilde with underline
	{ NS_LITERAL_STRING("\u2242\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotEqualTilde;
	{ NS_LITERAL_STRING("\u224E\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotHumpDownHump;
	{ NS_LITERAL_STRING("\u224F\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotHumpEqual;
	{ NS_LITERAL_STRING("\u2266\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotGreaterFullEqual;
	{ NS_LITERAL_STRING("\u226A\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotLessLess;
	{ NS_LITERAL_STRING("\u226B\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotGreaterGreater;
	{ NS_LITERAL_STRING("\u227F\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotSucceedsTilde;
	{ NS_LITERAL_STRING("\u2282\u20D2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // subset of with vertical line
	{ NS_LITERAL_STRING("\u2283\u20D2"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // superset of with vertical line
	{ NS_LITERAL_STRING("\u228F\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotSquareSubset;
	{ NS_LITERAL_STRING("\u2290\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotSquareSuperset;
	{ NS_LITERAL_STRING("\u29CF\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotLeftTriangleBar;
	{ NS_LITERAL_STRING("\u29D0\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotRightTriangleBar;
	{ NS_LITERAL_STRING("\u2A7D\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotLessSlantEqual;
	{ NS_LITERAL_STRING("\u2A7E\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotGreaterSlantEqual;
	{ NS_LITERAL_STRING("\u2AA1\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotNestedLessLess;
	{ NS_LITERAL_STRING("\u2AA2\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotNestedGreaterGreater;
	{ NS_LITERAL_STRING("\u2AAF\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotPrecedesEqual;
	{ NS_LITERAL_STRING("\u2AB0\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &NotSucceedsEqual;
	{ NS_LITERAL_STRING("\u2AC5\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &nsubseteqq;
	{ NS_LITERAL_STRING("\u2AC6\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX }, // &nsubseteqq;
	{ NS_LITERAL_STRING("\u2ADD\u0338"), 5, 5, NS_MATHML_OPERATOR_FORM_INFIX } // nonforking with slash
};

// Find matching operator with matching form, or next form
static const OperatorData*
SequentialOpSearch(const OperatorData* opTable,
				   const OperatorData&  aOperator,
				   uint16_t ndx, uint16_t size)
{
	uint16_t left = ndx;
	// Check current and up to 2 forward operators for matching form
	for (uint8_t i = 0; i <= 2 && ndx + i < size; ++i)
	{
		nsString cur = opTable[ndx + i].mStr;
		// if current operator is the same as target operator
		if (aOperator.mStr.Equals(cur)) {
			// if forms match
			if (NS_MATHML_OPERATOR_GET_FORM(aOperator.mFlags)
				== NS_MATHML_OPERATOR_GET_FORM(opTable[ndx + i].mFlags)) {
				return &opTable[ndx + i];
			}
		}
		else break;
	}
	// Check up to 2 operators behind
	for (uint8_t i = 1; i <= 2 && ndx - i >= 0; ++i)
	{
		nsString str = opTable[ndx-i].mStr;
		// if current operator is the same as target operator
		if (aOperator.mStr.Equals(str)) {
			// if forms match
			if (NS_MATHML_OPERATOR_GET_FORM(aOperator.mFlags)
				== NS_MATHML_OPERATOR_GET_FORM(opTable[ndx - i].mFlags)) {
				return &opTable[ndx - i];
			}
			left = ndx - i;
		}
		else break;
	}
	// take leftmost matching operator ( forms are in sorted order )
	return &opTable[left];
}

// Binary search appropriate table.
static const OperatorData*
OperatorSearch(const OperatorData* opTable,
			   const OperatorData&  aOperator,
			   int16_t f, int16_t	l, uint16_t size)
{
	auto mid = f + (l - f) / 2;
	if (f <= l) {
		if (aOperator < opTable[mid])
			return OperatorSearch(opTable, aOperator, f, mid - 1, size);
		if (opTable[mid] < aOperator)
			return OperatorSearch(opTable, aOperator, mid+1, l, size);
		// current operator is a match
		// sequential search for desired form, or next form in line
		return SequentialOpSearch(opTable, aOperator, mid, size);
	}
	// not found
	return nullptr;
}

static const OperatorData*
GetOperatorData(const nsString& aOperator, nsOperatorFlags aForm)
{
	// create dummy operator to search for
	OperatorData dummy;
	dummy.mStr = aOperator;
	dummy.mFlags = aForm;

	// Decide which table to search in
	uint16_t size;
	const OperatorData* opTable;
	if (aOperator.Length() == 1) {
		opTable = gOperatorTable;
		size = gOperatorCount;
	}
	else {
		opTable = gCompoundOperTable;
		size = gCompoundOperCount;
	}
	// search for operator, if not found return nullptr
	return OperatorSearch(opTable, dummy, 0, size, size-1);
}

bool
nsMathMLOperators::LookupOperator(const nsString&       aOperator,
								  const nsOperatorFlags aForm,
								  nsOperatorFlags*      aFlags,
								  float*                aLeadingSpace,
								  float*                aTrailingSpace)
{
	NS_ASSERTION(aFlags && aLeadingSpace && aTrailingSpace, "bad usage");
	NS_ASSERTION(aForm > 0 && aForm < 4, "*** invalid call ***");

	// The MathML REC says:
	// If the operator does not occur in the dictionary with the specified form,
	// the renderer should use one of the forms which is available there, in the
	// order of preference: infix, postfix, prefix.

	const OperatorData* found;
	int32_t form = NS_MATHML_OPERATOR_GET_FORM(aForm);
	// will find operator of form or next in line form
	found = GetOperatorData(aOperator, form);
	if (found) {
		NS_ASSERTION(found->mStr.Equals(aOperator), "bad setup");
		*aLeadingSpace = found->mLeadingSpace;
		*aTrailingSpace = found->mTrailingSpace;
		*aFlags &= ~NS_MATHML_OPERATOR_FORM; // clear the form bits
		*aFlags |= found->mFlags; // just add bits without overwriting
		return true;
	}
	return false;
}

void
nsMathMLOperators::LookupOperators(const nsString&       aOperator,
								   nsOperatorFlags*      aFlags,
								   float*                aLeadingSpace,
								   float*                aTrailingSpace)
{

	aFlags[NS_MATHML_OPERATOR_FORM_INFIX] = 0;
	aLeadingSpace[NS_MATHML_OPERATOR_FORM_INFIX] = 0.0f;
	aTrailingSpace[NS_MATHML_OPERATOR_FORM_INFIX] = 0.0f;

	aFlags[NS_MATHML_OPERATOR_FORM_POSTFIX] = 0;
	aLeadingSpace[NS_MATHML_OPERATOR_FORM_POSTFIX] = 0.0f;
	aTrailingSpace[NS_MATHML_OPERATOR_FORM_POSTFIX] = 0.0f;

	aFlags[NS_MATHML_OPERATOR_FORM_PREFIX] = 0;
	aLeadingSpace[NS_MATHML_OPERATOR_FORM_PREFIX] = 0.0f;
	aTrailingSpace[NS_MATHML_OPERATOR_FORM_PREFIX] = 0.0f;

	const OperatorData* found;
	found = GetOperatorData(aOperator, NS_MATHML_OPERATOR_FORM_INFIX);
	if (found) {
		aFlags[NS_MATHML_OPERATOR_FORM_INFIX] = found->mFlags;
		aLeadingSpace[NS_MATHML_OPERATOR_FORM_INFIX] = found->mLeadingSpace;
		aTrailingSpace[NS_MATHML_OPERATOR_FORM_INFIX] = found->mTrailingSpace;
	}
	found = GetOperatorData(aOperator, NS_MATHML_OPERATOR_FORM_POSTFIX);
	if (found) {
		aFlags[NS_MATHML_OPERATOR_FORM_POSTFIX] = found->mFlags;
		aLeadingSpace[NS_MATHML_OPERATOR_FORM_POSTFIX] = found->mLeadingSpace;
		aTrailingSpace[NS_MATHML_OPERATOR_FORM_POSTFIX] = found->mTrailingSpace;
	}
	found = GetOperatorData(aOperator, NS_MATHML_OPERATOR_FORM_PREFIX);
	if (found) {
		aFlags[NS_MATHML_OPERATOR_FORM_PREFIX] = found->mFlags;
		aLeadingSpace[NS_MATHML_OPERATOR_FORM_PREFIX] = found->mLeadingSpace;
		aTrailingSpace[NS_MATHML_OPERATOR_FORM_PREFIX] = found->mTrailingSpace;
	}
}

/* static */ bool
nsMathMLOperators::IsMirrorableOperator(const nsString& aOperator)
{
	// LookupOperator will search infix, postfix and prefix forms of aOperator and
	// return the first form found. It is assumed that all these forms have same
	// mirrorability.
	nsOperatorFlags flags = 0;
	float dummy;
	nsMathMLOperators::LookupOperator(aOperator,
		NS_MATHML_OPERATOR_FORM_INFIX,
		&flags, &dummy, &dummy);
	return NS_MATHML_OPERATOR_IS_MIRRORABLE(flags);
}

/* static */ nsStretchDirection
nsMathMLOperators::GetStretchyDirection(const nsString& aOperator)
{
	// LookupOperator will search infix, postfix and prefix forms of aOperator and
	// return the first form found. It is assumed that all these forms have same
	// direction.
	nsOperatorFlags flags = 0;
	float dummy;
	nsMathMLOperators::LookupOperator(aOperator,
		NS_MATHML_OPERATOR_FORM_INFIX,
		&flags, &dummy, &dummy);

	if (NS_MATHML_OPERATOR_IS_DIRECTION_VERTICAL(flags)) {
		return NS_STRETCH_DIRECTION_VERTICAL;
	}
	else if (NS_MATHML_OPERATOR_IS_DIRECTION_HORIZONTAL(flags)) {
		return NS_STRETCH_DIRECTION_HORIZONTAL;
	}
	else {
		return NS_STRETCH_DIRECTION_UNSUPPORTED;
	}
}

void
nsMathMLOperators::CleanUp()
{
}

void
nsMathMLOperators::AddRefTable(void)
{
	++gTableRefCount;
}

void
nsMathMLOperators::ReleaseTable(void)
{
	if (0 == --gTableRefCount) {
		CleanUp();
	}
}
